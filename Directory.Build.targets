<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the MIT license.  See License.txt in the project root for license information. -->
<Project>
  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <!-- Add License and Third Party Notices files into each VSIX. -->
  <ItemGroup>
    <Content Include="$(MSBuildThisFileDirectory)\assets\EULA.txt">
      <Link>EULA.txt</Link>
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
    <Content Include="$(MSBuildThisFileDirectory)\assets\ThirdPartyNotices.txt">
       <Link>ThirdPartyNotices.txt</Link>
       <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
  </ItemGroup>

   <ItemGroup Condition="'$(IsUnitTestProject)' == 'true'">
    <!-- 
      This package is a transitive dependency of Microsoft.NET.Test.Sdk but we explicitely define it here so we can use the
      GeneratePathProperty and use PkgMicrosoft_CodeCoverage below on TestRunnerAdditionalArguments.
     -->
    <PackageReference Include="Microsoft.CodeCoverage" Version="$(MicrosoftNETTestSdkVersion)" GeneratePathProperty="true" />
  </ItemGroup>

  <PropertyGroup Condition="'$(IsTestProject)' == 'true' or '$(NonShipping)' == 'true' or '$(IsVsixProject)' == 'true'">
    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ReleaseTrackingOptOut)' == 'true'">
    <!-- RS2008: Enable analyzer release tracking -->
    <NoWarn>$(NoWarn);RS2008</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Clear out 'RootNamespace' for VB projects. Otherwise, it prepends the RootNamespace to declared namespace for the types in the project. -->
    <RootNamespace Condition="'$(Language)' == 'VB'"></RootNamespace>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Coverage)' == 'true'">
    <!-- AzDO only supports coverage format but here we use codecov.io so we go with Cobertura format -->
    <TestRunnerAdditionalArguments>$(TestRunnerAdditionalArguments) --collect:"Code Coverage;Format=Cobertura"</TestRunnerAdditionalArguments>
    <!-- TODO: On next arcade bump of Microsoft.CodeCoverage/Microsoft.NET.Test.Sdk we will have to update this line to be netstandard2.0 -->
    <!-- Because arcade is passing dlls directly to 'dotnet test' command, we need to manually provide path to coverage datacollector -->
    <TestRunnerAdditionalArguments>$(TestRunnerAdditionalArguments) --test-adapter-path $(PkgMicrosoft_CodeCoverage)/build/netstandard1.0</TestRunnerAdditionalArguments>
    <TestRunnerAdditionalArguments>$(TestRunnerAdditionalArguments) --settings ($MSBuildThisFileDirectory)roslyn-analyzers.runsettings</TestRunnerAdditionalArguments>
  </PropertyGroup>

  <!-- Global Analyzer Config -->
  <ItemGroup>
    <!-- Always include Common.globalconfig -->
    <EditorConfigFiles Include="$(RepositoryEngineeringDir)globalconfigs\Common.globalconfig" />
    <!-- Include Shipping.globalconfig for shipping projects -->
    <EditorConfigFiles Condition="'$(IsShipping)' == 'true'" Include="$(RepositoryEngineeringDir)globalconfigs\Shipping.globalconfig" />
    <!-- Include NonShipping.globalconfig for non-shipping projects -->
    <EditorConfigFiles Condition="'$(IsShipping)' != 'true'" Include="$(RepositoryEngineeringDir)globalconfigs\NonShipping.globalconfig" />
  </ItemGroup>

  <Target Name="OuterInstrumentModulesNoBuild" BeforeTargets="RunTests" Condition="'$(IsUnitTestProject)' == 'true' AND '$(TargetFramework)' == ''">
    <MSBuild
      Projects="$(MSBuildProjectFullPath)"
      Targets="InnerInstrumentModulesNoBuild"
      Properties="TargetFramework=%(_TargetFramework.Identity)" />
  </Target>

  <Target Name="OuterGenerateCoverageResult" BeforeTargets="Test" Condition="'$(IsUnitTestProject)' == 'true' AND '$(TargetFramework)' == ''">
    <MSBuild
      Projects="$(MSBuildProjectFullPath)"
      Targets="InnerGenerateCoverageResult"
      Properties="TargetFramework=%(_TargetFramework.Identity)" />
  </Target>

  <Target Name="InnerInstrumentModulesNoBuild"
          BeforeTargets="RunTests"
          DependsOnTargets="InstrumentModules"
          Condition="'$(IsUnitTestProject)' == 'true' AND '$(TargetFramework)' != '' AND '$(CollectCoverage)' == 'true'" />

  <Target Name="InnerGenerateCoverageResult"
          BeforeTargets="Test"
          DependsOnTargets="GenerateCoverageResult"
          Condition="'$(IsUnitTestProject)' == 'true' AND '$(TargetFramework)' != '' AND '$(CollectCoverage)' == 'true'" />
</Project>

resources:
- repo: self
  clean: true
queue:
  name: VSEng-MicroBuildVS2019
  demands: Cmd
variables:
  BuildConfiguration: Release
  TeamName: Roslyn
  _DotNetArtifactsCategory: .NETCore

steps:
- task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
  displayName: Install Signing Plugin
  inputs:
    signType: $(SignType)
    esrpSigning: true
  condition: and(succeeded(), ne(variables['SignType'], ''))

- script: eng\common\CIBuild.cmd 
            -configuration $(BuildConfiguration)
            /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
            /p:DotNetSignType=$(SignType)
            /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
            /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
            /p:PublishToSymbolServer=true
            /p:DotNetPublishToBlobFeed=true
            /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)
            /p:DotNetPublishBlobFeedUrl=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json
            /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory)
            /p:DotnetPublishUsingPipelines=true
  displayName: Build

- task: NuGetPublisher@0
  displayName: Publish NuGet Packages to MyGet
  inputs:
    searchPattern: 'artifacts\packages\$(BuildConfiguration)\Shipping\*.nupkg'
    connectedServiceName: 'RoslynAnalyzers NuGet feed'
    nuGetVersion: 4.0.0.2283
  condition: succeeded()

- task: PublishBuildArtifacts@1
  displayName: Publish Logs
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\$(BuildConfiguration)'
    ArtifactName: 'Logs'
  continueOnError: true
  condition: not(succeeded())

- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
    testRunner: XUnit
    testResultsFiles: 'artifacts/TestResults/$(BuildConfiguration)/*.xml'
    mergeTestResults: true
    testRunTitle: 'Unit Tests'
  condition: always()

# Archive NuGet packages to DevOps.
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact Packages
  inputs:
    PathtoPublish: 'artifacts\packages\$(BuildConfiguration)'
    ArtifactName: 'Packages'
  condition: succeeded()

# Archive VSIX packages to DevOps.
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact VSIXes
  inputs:
    PathtoPublish: 'artifacts\VSSetup\$(BuildConfiguration)'
    ArtifactName: 'VSIXes'
  condition: succeeded()

- task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
  displayName: Cleanup
  condition: always()

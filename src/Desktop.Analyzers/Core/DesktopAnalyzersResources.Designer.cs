//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Desktop.Analyzers {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DesktopAnalyzersResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DesktopAnalyzersResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Desktop.Analyzers.DesktopAnalyzersResources", typeof(DesktopAnalyzersResources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An access key, also known as an accelerator, enables keyboard access to a control by using the ALT key. When multiple controls have duplicate access keys, the behavior of the access key is not well defined..
        /// </summary>
        internal static string AvoidDuplicateAcceleratorsDescription {
            get {
                return ResourceManager.GetString("AvoidDuplicateAcceleratorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid duplicate accelerators.
        /// </summary>
        internal static string AvoidDuplicateAcceleratorsMessage {
            get {
                return ResourceManager.GetString("AvoidDuplicateAcceleratorsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avoid duplicate accelerators.
        /// </summary>
        internal static string AvoidDuplicateAcceleratorsTitle {
            get {
                return ResourceManager.GetString("AvoidDuplicateAcceleratorsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To fix a violation of this rule, call the base type GetObjectData method or serialization constructor from the corresponding derived type method or constructor..
        /// </summary>
        internal static string CallBaseClassMethodsOnISerializableTypesDescription {
            get {
                return ResourceManager.GetString("CallBaseClassMethodsOnISerializableTypesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call base class methods on ISerializable types.
        /// </summary>
        internal static string CallBaseClassMethodsOnISerializableTypesMessage {
            get {
                return ResourceManager.GetString("CallBaseClassMethodsOnISerializableTypesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call base class methods on ISerializable types.
        /// </summary>
        internal static string CallBaseClassMethodsOnISerializableTypesTitle {
            get {
                return ResourceManager.GetString("CallBaseClassMethodsOnISerializableTypesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Globalization.
        /// </summary>
        internal static string CategoryGlobalization {
            get {
                return ResourceManager.GetString("CategoryGlobalization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NoCetegory.
        /// </summary>
        internal static string CategoryNoCetegory {
            get {
                return ResourceManager.GetString("CategoryNoCetegory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage.
        /// </summary>
        internal static string CategoryUsage {
            get {
                return ResourceManager.GetString("CategoryUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A method in a type that inherits from System.EnterpriseServices.ServicedComponent is marked by using System.Web.Services.WebMethodAttribute. Because WebMethodAttribute and a ServicedComponent method have conflicting behavior and requirements for context and transaction flow, the behavior of the method will be incorrect in some scenarios..
        /// </summary>
        internal static string DoNotMarkServicedComponentsWithWebMethodDescription {
            get {
                return ResourceManager.GetString("DoNotMarkServicedComponentsWithWebMethodDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not mark serviced components with WebMethod.
        /// </summary>
        internal static string DoNotMarkServicedComponentsWithWebMethodMessage {
            get {
                return ResourceManager.GetString("DoNotMarkServicedComponentsWithWebMethodMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not mark serviced components with WebMethod.
        /// </summary>
        internal static string DoNotMarkServicedComponentsWithWebMethodTitle {
            get {
                return ResourceManager.GetString("DoNotMarkServicedComponentsWithWebMethodTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To fix a violation of this rule, make the GetObjectData method visible and overridable, and make sure that all instance fields are included in the serialization process or explicitly marked by using the NonSerializedAttribute attribute..
        /// </summary>
        internal static string ImplementISerializableCorrectlyDescription {
            get {
                return ResourceManager.GetString("ImplementISerializableCorrectlyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add an implementation of GetObjectData to type {0}..
        /// </summary>
        internal static string ImplementISerializableCorrectlyMessageDefault {
            get {
                return ResourceManager.GetString("ImplementISerializableCorrectlyMessageDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make {0}.GetObjectData virtual and overridable..
        /// </summary>
        internal static string ImplementISerializableCorrectlyMessageMakeOverridable {
            get {
                return ResourceManager.GetString("ImplementISerializableCorrectlyMessageMakeOverridable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increase the accessibility of {0}.GetObjectData so that it is visible to derived types..
        /// </summary>
        internal static string ImplementISerializableCorrectlyMessageMakeVisible {
            get {
                return ResourceManager.GetString("ImplementISerializableCorrectlyMessageMakeVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implement ISerializable correctly.
        /// </summary>
        internal static string ImplementISerializableCorrectlyTitle {
            get {
                return ResourceManager.GetString("ImplementISerializableCorrectlyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To fix a violation of this rule, implement the serialization constructor. For a sealed class, make the constructor private; otherwise, make it protected..
        /// </summary>
        internal static string ImplementSerializationConstructorsDescription {
            get {
                return ResourceManager.GetString("ImplementSerializationConstructorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a constructor to {0} with the following signature: &apos;protected {0}(SerializationInfo info, StreamingContext context)&apos;..
        /// </summary>
        internal static string ImplementSerializationConstructorsMessageCreateMagicConstructor {
            get {
                return ResourceManager.GetString("ImplementSerializationConstructorsMessageCreateMagicConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declare the serialization constructor of {0}, a sealed type, as private..
        /// </summary>
        internal static string ImplementSerializationConstructorsMessageMakeSealedMagicConstructorPrivate {
            get {
                return ResourceManager.GetString("ImplementSerializationConstructorsMessageMakeSealedMagicConstructorPrivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declare the serialization constructor of {0}, an unsealed type, as protected..
        /// </summary>
        internal static string ImplementSerializationConstructorsMessageMakeUnsealedMagicConstructorFamily {
            get {
                return ResourceManager.GetString("ImplementSerializationConstructorsMessageMakeUnsealedMagicConstructorFamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implement serialization constructors.
        /// </summary>
        internal static string ImplementSerializationConstructorsTitle {
            get {
                return ResourceManager.GetString("ImplementSerializationConstructorsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A method that handles a serialization event does not have the correct signature, return type, or visibility..
        /// </summary>
        internal static string ImplementSerializationMethodsCorrectlyDescription {
            get {
                return ResourceManager.GetString("ImplementSerializationMethodsCorrectlyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because {0} is marked with OnSerializing, OnSerialized, OnDeserializing, or OnDeserialized, change its signature so that it is no longer generic..
        /// </summary>
        internal static string ImplementSerializationMethodsCorrectlyMessageGeneric {
            get {
                return ResourceManager.GetString("ImplementSerializationMethodsCorrectlyMessageGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because {0} is marked with OnSerializing, OnSerialized, OnDeserializing, or OnDeserialized, change its signature so that it takes a single parameter of type &apos;System.Runtime.Serialization.StreamingContext&apos;..
        /// </summary>
        internal static string ImplementSerializationMethodsCorrectlyMessageParameters {
            get {
                return ResourceManager.GetString("ImplementSerializationMethodsCorrectlyMessageParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because {0} is marked with OnSerializing, OnSerialized, OnDeserializing, or OnDeserialized, change its return type from {1} to void (Sub in Visual Basic)..
        /// </summary>
        internal static string ImplementSerializationMethodsCorrectlyMessageReturnType {
            get {
                return ResourceManager.GetString("ImplementSerializationMethodsCorrectlyMessageReturnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because {0} is marked with OnSerializing, OnSerialized, OnDeserializing, or OnDeserialized, change it from static (Shared in Visual Basic) to an instance method..
        /// </summary>
        internal static string ImplementSerializationMethodsCorrectlyMessageStatic {
            get {
                return ResourceManager.GetString("ImplementSerializationMethodsCorrectlyMessageStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because {0} is marked with OnSerializing, OnSerialized, OnDeserializing, or OnDeserialized, change its accessibility to private..
        /// </summary>
        internal static string ImplementSerializationMethodsCorrectlyMessageVisibility {
            get {
                return ResourceManager.GetString("ImplementSerializationMethodsCorrectlyMessageVisibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implement serialization methods correctly.
        /// </summary>
        internal static string ImplementSerializationMethodsCorrectlyTitle {
            get {
                return ResourceManager.GetString("ImplementSerializationMethodsCorrectlyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instance field of a type that is not serializable is declared in a type that is serializable..
        /// </summary>
        internal static string MarkAllNonSerializableFieldsDescription {
            get {
                return ResourceManager.GetString("MarkAllNonSerializableFieldsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark all non-serializable fields.
        /// </summary>
        internal static string MarkAllNonSerializableFieldsMessage {
            get {
                return ResourceManager.GetString("MarkAllNonSerializableFieldsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark all non-serializable fields.
        /// </summary>
        internal static string MarkAllNonSerializableFieldsTitle {
            get {
                return ResourceManager.GetString("MarkAllNonSerializableFieldsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To be recognized by the common language runtime as serializable, types must be marked by using the SerializableAttribute attribute even when the type uses a custom serialization routine through implementation of the ISerializable interface..
        /// </summary>
        internal static string MarkISerializableTypesWithSerializableDescription {
            get {
                return ResourceManager.GetString("MarkISerializableTypesWithSerializableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark ISerializable types with serializable.
        /// </summary>
        internal static string MarkISerializableTypesWithSerializableMessage {
            get {
                return ResourceManager.GetString("MarkISerializableTypesWithSerializableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark ISerializable types with serializable.
        /// </summary>
        internal static string MarkISerializableTypesWithSerializableTitle {
            get {
                return ResourceManager.GetString("MarkISerializableTypesWithSerializableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to STAThreadAttribute indicates that the COM threading model for the application is a single-threaded apartment. This attribute must be present on the entry point of any application that uses Windows Forms; if it is omitted, the Windows components might not work correctly..
        /// </summary>
        internal static string MarkWindowsFormsEntryPointsWithStaThreadDescription {
            get {
                return ResourceManager.GetString("MarkWindowsFormsEntryPointsWithStaThreadDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark Windows Forms entry points with STAThread.
        /// </summary>
        internal static string MarkWindowsFormsEntryPointsWithStaThreadMessage {
            get {
                return ResourceManager.GetString("MarkWindowsFormsEntryPointsWithStaThreadMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark Windows Forms entry points with STAThread.
        /// </summary>
        internal static string MarkWindowsFormsEntryPointsWithStaThreadTitle {
            get {
                return ResourceManager.GetString("MarkWindowsFormsEntryPointsWithStaThreadTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A type has a field that is marked by using the System.Runtime.Serialization.OptionalFieldAttribute attribute, and the type does not provide deserialization event handling methods..
        /// </summary>
        internal static string ProvideDeserializationMethodsForOptionalFieldsDescription {
            get {
                return ResourceManager.GetString("ProvideDeserializationMethodsForOptionalFieldsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a &apos;private void OnDeserialized(StreamingContext)&apos; method to type {0} and attribute it with the System.Runtime.Serialization.OnDeserializedAttribute..
        /// </summary>
        internal static string ProvideDeserializationMethodsForOptionalFieldsMessageOnDeserialized {
            get {
                return ResourceManager.GetString("ProvideDeserializationMethodsForOptionalFieldsMessageOnDeserialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a &apos;private void OnDeserializing(StreamingContext)&apos; method to type {0} and attribute it with the System.Runtime.Serialization.OnDeserializingAttribute..
        /// </summary>
        internal static string ProvideDeserializationMethodsForOptionalFieldsMessageOnDeserializing {
            get {
                return ResourceManager.GetString("ProvideDeserializationMethodsForOptionalFieldsMessageOnDeserializing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide deserialization methods for optional fields.
        /// </summary>
        internal static string ProvideDeserializationMethodsForOptionalFieldsTitle {
            get {
                return ResourceManager.GetString("ProvideDeserializationMethodsForOptionalFieldsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Review code to insure that usage of System.Data.DataViewManager.DataViewSettingCollectionString input is sanitized to not contain DTD. Enabling DTD processing on the XML reader and using UrlResolver for resolving external XML entities may lead to information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector..
        /// </summary>
        internal static string ReviewDataViewCollectionStringDescription {
            get {
                return ResourceManager.GetString("ReviewDataViewCollectionStringDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Review DataView CollectionString.
        /// </summary>
        internal static string ReviewDataViewCollectionStringMessage {
            get {
                return ResourceManager.GetString("ReviewDataViewCollectionStringMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Review DataView CollectionString.
        /// </summary>
        internal static string ReviewDataViewCollectionStringTitle {
            get {
                return ResourceManager.GetString("ReviewDataViewCollectionStringTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The locale determines culture-specific presentation elements for data, such as formatting that is used for numeric values, currency symbols, and sort order. When you create a DataTable or DataSet, you should explicitly set the locale..
        /// </summary>
        internal static string SetLocaleForDataTypesDescription {
            get {
                return ResourceManager.GetString("SetLocaleForDataTypesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set locale for data types.
        /// </summary>
        internal static string SetLocaleForDataTypesMessage {
            get {
                return ResourceManager.GetString("SetLocaleForDataTypesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set locale for data types.
        /// </summary>
        internal static string SetLocaleForDataTypesTitle {
            get {
                return ResourceManager.GetString("SetLocaleForDataTypesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To correctly display a message box for cultures that use a right-to-left reading order, the RightAlign and RtlReading members of the MessageBoxOptions enumeration must be passed to the Show method..
        /// </summary>
        internal static string SpecifyMessageBoxOptionsDescription {
            get {
                return ResourceManager.GetString("SpecifyMessageBoxOptionsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify MessageBoxOptions.
        /// </summary>
        internal static string SpecifyMessageBoxOptionsMessage {
            get {
                return ResourceManager.GetString("SpecifyMessageBoxOptionsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify MessageBoxOptions.
        /// </summary>
        internal static string SpecifyMessageBoxOptionsTitle {
            get {
                return ResourceManager.GetString("SpecifyMessageBoxOptionsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use unsafe overloads of System.Data.DataSet.ReadXml. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector..
        /// </summary>
        internal static string UseXmlReaderForDataSetReadXmlDescription {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataSetReadXmlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use XmlReader for DataSet ReadXml.
        /// </summary>
        internal static string UseXmlReaderForDataSetReadXmlMessage {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataSetReadXmlMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use unsafe overloads of System.Data.DataSet.ReadXmlSchema. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector..
        /// </summary>
        internal static string UseXmlReaderForDataSetReadXmlSchemaDescription {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataSetReadXmlSchemaDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use XmlReader for DataSet ReadXmlSchema.
        /// </summary>
        internal static string UseXmlReaderForDataSetReadXmlSchemaMessage {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataSetReadXmlSchemaMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use XmlReader for DataSet ReadXmlSchema.
        /// </summary>
        internal static string UseXmlReaderForDataSetReadXmlSchemaTitle {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataSetReadXmlSchemaTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use XmlReader for DataSet ReadXml.
        /// </summary>
        internal static string UseXmlReaderForDataSetReadXmlTitle {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataSetReadXmlTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use unsafe overloads of System.Data.DataTable.ReadXml. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector..
        /// </summary>
        internal static string UseXmlReaderForDataTableReadXmlDescription {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataTableReadXmlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use XmlReader for DataTable ReadXml.
        /// </summary>
        internal static string UseXmlReaderForDataTableReadXmlMessage {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataTableReadXmlMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checks for usage of an unsafe overload of  System.Data.DataTable.ReadXmlSchema. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector..
        /// </summary>
        internal static string UseXmlReaderForDataTableReadXmlSchemaDescription {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataTableReadXmlSchemaDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use XmlReader for DataTable ReadXmlSchema.
        /// </summary>
        internal static string UseXmlReaderForDataTableReadXmlSchemaMessage {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataTableReadXmlSchemaMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use XmlReader for DataTable ReadXmlSchema.
        /// </summary>
        internal static string UseXmlReaderForDataTableReadXmlSchemaTitle {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataTableReadXmlSchemaTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use XmlReader for DataTable ReadXml.
        /// </summary>
        internal static string UseXmlReaderForDataTableReadXmlTitle {
            get {
                return ResourceManager.GetString("UseXmlReaderForDataTableReadXmlTitle", resourceCulture);
            }
        }
    }
}

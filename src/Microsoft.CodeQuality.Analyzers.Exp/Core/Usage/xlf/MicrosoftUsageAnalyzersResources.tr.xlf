<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="tr" original="../MicrosoftUsageAnalyzersResources.resx">
    <body>
      <trans-unit id="DisposableFieldsShouldBeDisposedDescription">
        <source>A type that implements System.IDisposable declares fields that are of types that also implement IDisposable. The Dispose method of the field is not called by the Dispose method of the declaring type. To fix a violation of this rule, call Dispose on fields that are of types that implement IDisposable if you are responsible for allocating and releasing the unmanaged resources held by the field.</source>
        <target state="translated">System.IDisposable uygulayan bir tür, IDisposable uygulayan türlerdeki alanları bildirir. Alanın Dispose metodu, bildiren türün Dispose metodu tarafından çağrılmıyor. Bu kurala yönelik bir ihlali düzeltmek için, alan tarafından tutulan yönetilmeyen kaynakları ayırma ve bırakma sorumluluğuna sahipseniz IDisposable uygulayan türlerdeki alanlarda Dispose çağrısı yapın.</target>
        <note />
      </trans-unit>
      <trans-unit id="DisposableFieldsShouldBeDisposedTitle">
        <source>Disposable fields should be disposed</source>
        <target state="translated">Atılabilir alanlar atılmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="DisposableFieldsShouldBeDisposedMessage">
        <source>'{0}' contains field '{1}' that is of IDisposable type '{2}', but it is never disposed. Change the Dispose method on '{0}' to call Close or Dispose on this field.</source>
        <target state="translated">'{0}', '{2}' IDisposable türünde olan '{1}' alanını içeriyor ancak hiç atılmamış. '{0}' öğesindeki Dispose metodunu bu alanda Close veya Dispose çağrısı yapacak şekilde değiştirin.</target>
        <note />
      </trans-unit>
      <trans-unit id="DisposeMethodsShouldCallBaseClassDisposeDescription">
        <source>A type that implements System.IDisposable inherits from a type that also implements IDisposable. The Dispose method of the inheriting type does not call the Dispose method of the parent type. To fix a violation of this rule, call base.Dispose in your Dispose method.</source>
        <target state="translated">System.IDisposable uygulayan bir tür, aynı zamanda IDisposable uygulayan bir türden devralır. Devralma türünün Dispose yöntemi, üst türün Dispose yöntemini çağırmaz. Bu kuralın ihlalini düzeltmek için Dispose yönteminde base.Dispose öğesini çağırın.</target>
        <note />
      </trans-unit>
      <trans-unit id="DisposeMethodsShouldCallBaseClassDisposeMessage">
        <source>Ensure that method '{0}' calls '{1}' in all possible control flow paths.</source>
        <target state="translated">'{0}' yönteminin olası tüm denetim akışı yollarında '{1}' çağırdığından emin olun.</target>
        <note />
      </trans-unit>
      <trans-unit id="DisposeMethodsShouldCallBaseClassDisposeTitle">
        <source>Dispose methods should call base class dispose</source>
        <target state="translated">Dispose yöntemleri temel sınıf dispose yöntemini çağırmalıdır</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
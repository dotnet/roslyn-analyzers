<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="tr" original="../ApiReviewAnalyzersResources.resx">
    <body>
      <trans-unit id="AvoidCallingProblematicMethodsTitle">
        <source>Avoid calling problematic methods</source>
        <target state="translated">Sorunlu yöntemleri çağırmaktan kaçının</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsDescription">
        <source>A member calls a potentially dangerous or problematic method.</source>
        <target state="translated">Bir üye, tehlikeli veya sorunlu olabilecek bir yöntemi çağırıyor.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsMessageSystemGCCollect">
        <source>Remove the call to GC.Collect from {0}. It is usually unnecessary to force garbage collection, and doing so can severely degrade performance.</source>
        <target state="translated">{0} öğesinden GC.Collect çağrısını kaldırın. Çöp toplamanın zorlanması genelde gereksizdir ve performansı önemli ölçüde düşürebilir.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsMessageSystemThreadingThreadResume">
        <source>Remove the call to Thread.Resume from {0}. Suspending and resuming threads can be dangerous if the system is in the middle of a critical operation such as executing a class constructor of an important system type or resolving security for a shared assembly.</source>
        <target state="translated">{0} öğesinden Thread.Resume çağrısını kaldırın. Sistem önemli bir sistem türünün sınıf oluşturucusunu yürütme ya da paylaşılan bir bütünleştirilmiş kod için güvenliği çözümleme gibi kritik bir işlemin ortasındaysa iş parçacıklarının askıya alınıp sürdürülmesi tehlikeli olabilir.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsMessageSystemThreadingThreadSuspend">
        <source>Remove the call to Thread.Suspend from {0}. Suspending and resuming threads can be dangerous if the system is in the middle of a critical operation such as executing a class constructor of an important system type or resolving security for a shared assembly.</source>
        <target state="translated">{0} öğesinden Thread.Suspend çağrısını kaldırın. Sistem önemli bir sistem türünün sınıf oluşturucusunu yürütme ya da paylaşılan bir bütünleştirilmiş kod için güvenliği çözümleme gibi kritik bir işlemin ortasındaysa iş parçacıklarının askıya alınıp sürdürülmesi tehlikeli olabilir.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsMessageSystemTypeInvokeMember">
        <source>Remove the call to System.Type.InvokeMember with BindingFlags.NonPublic from {0}. Taking a dependency on a private member increases the chance of a breaking change in the future.</source>
        <target state="translated">{0} öğesinden BindingFlags.NonPublic bağlamalı System.Type.InvokeMember çağrısını kaldırın. Özel bir üyede bağımlılık alınması, gelecekte bozucu değişiklik olasılığını artırır.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsMessageCoInitializeSecurity">
        <source>{0} is a P/Invoke declaration to an OLE32 API that cannot be reliably called after the runtime has been initialized. The workaround is to write an unmanaged shim that will call the routine and then activate and call into managed code. You can do this using an export from a mixed-mode C++ DLL, by registering a managed component for use by COM, or by using the runtime hosting API.</source>
        <target state="translated">{0}, çalışma zamanı başlatıldıktan sonra güvenilir bir şekilde çağrılamayacak OLE32 API’ye yönelik bir P/Invoke bildirimi. Geçici çözüm, rutini çağıracak yönetilmeyen bir dolgu yazmak, sonra da etkinleştirip yönetilen koda çağırmaktır. Bunu karışık modlu bir C++ DLL’den dışarı aktarmayı kullanarak, COM ile kullanılmak üzere yönetilen bir bileşen kaydederek ya da çalışma zamanı barındırma API’sini kullanarak yapabilirsiniz.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsMessageCoSetProxyBlanket">
        <source>{0} is a P/Invoke declaration to an OLE32 API that cannot be reliably called against a runtime callable wrapper (a managed object wrapping a COM object). Runtime callable wrappers dynamically fetch interface pointers so the effect of the call might be arbitrarily lost. Runtime callable wrappers for a given COM object are also shared across an application domain so the call could possibly affect other users. Replace this call with a native wrapper COM object for the interface pointer that does the appropriate CoSetProxyBlanket calls.</source>
        <target state="translated">{0}, çalışma zamanında çağrılabilecek bir sarmalayıcıya (bir COM nesnesini sarmalayan bir yönetilen nesne) göre güvenilir bir şekilde çağrılamayacak OLE32 API’ye yönelik bir P/Invoke bildirimi. Çalışma zamanında çağrılabilen sarmalayıcılar arabirim işaretçilerini dinamik olarak getirdiğinden, çağrının etkisi rastgele olarak kaybolabilir. Belirli bir COM nesnesi için çalışma zamanında çağrılabilen sarmalayıcılar uygulama etki alanının tamamında da paylaşıldığından, çağrının diğer kullanıcıları etkileme olasılığı vardır. Bu çağrıyı, uygun CoSetProxyBlanket çağrılarını gerçekleştiren arabirim işaretçisi için yerel bir sarmalayıcı COM nesnesiyle değiştirin.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsMessageSystemRuntimeInteropServicesSafeHandleDangerousGetHandle">
        <source>Remove the call to SafeHandle.DangerousGetHandle from {0}.</source>
        <target state="translated">{0} öğesinden SafeHandle.DangerousGetHandle çağrısını kaldırın.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsMessageSystemReflectionAssemblyLoadFrom">
        <source>Remove the call to Assembly.LoadFrom from {0}.</source>
        <target state="translated">{0} öğesinden Assembly.LoadFrom çağrısını kaldırın.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsMessageSystemReflectionAssemblyLoadFile">
        <source>Remove the call to Assembly.LoadFile from {0}.</source>
        <target state="translated">{0} öğesinden Assembly.LoadFile çağrısını kaldırın.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidCallingProblematicMethodsMessageSystemReflectionAssemblyLoadWithPartialName">
        <source>Remove the call to Assembly.LoadWithPartialName from {0}.</source>
        <target state="translated">{0} öğesinden Assembly.LoadWithPartialName çağrısını kaldırın.</target>
        <note />
      </trans-unit>
      <trans-unit id="CategoryReliability">
        <source>Reliability</source>
        <target state="translated">Güvenilirlik</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
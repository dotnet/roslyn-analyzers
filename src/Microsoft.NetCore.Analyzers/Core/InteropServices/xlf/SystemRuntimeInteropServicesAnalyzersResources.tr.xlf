<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="tr" original="../SystemRuntimeInteropServicesAnalyzersResources.resx">
    <body>
      <trans-unit id="PInvokesShouldNotBeVisibleTitle">
        <source>P/Invokes should not be visible</source>
        <target state="translated">P/Invokes görünür olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="PInvokesShouldNotBeVisibleDescription">
        <source>A public or protected method in a public type has the System.Runtime.InteropServices.DllImportAttribute attribute (also implemented by the Declare keyword in Visual Basic). Such methods should not be exposed.</source>
        <target state="translated">Ortak bir türdeki ortak veya korumalı bir yöntem System.Runtime.InteropServices.DllImportAttribute özniteliğine sahip (ayrıca Visual Basic içinde Declare anahtar sözcüğü tarafından uygulanır). Bu tür yöntemler açığa çıkarılmamalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="PInvokesShouldNotBeVisibleMessage">
        <source>P/Invoke method '{0}' should not be visible</source>
        <target state="translated">P/Invoke yöntemi '{0}' görünür olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="PInvokeDeclarationsShouldBePortableTitle">
        <source>PInvoke declarations should be portable</source>
        <target state="translated">PInvoke bildirimleri taşınabilir olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="PInvokeDeclarationsShouldBePortableDescription">
        <source>This rule evaluates the size of each parameter and the return value of a P/Invoke, and verifies that the size of the parameter is correct when marshaled to unmanaged code on 32-bit and 64-bit operating systems.</source>
        <target state="translated">Bu kural her bir parametrenin boyutunu ve bir P/Invoke’un dönüş değerini değerlendirir ve parametre boyutunun 32 bit ve 64 bit işletim sistemlerinde yönetilmeyen kodda sıralandığında doğru olduğunu doğrular.</target>
        <note />
      </trans-unit>
      <trans-unit id="PInvokeDeclarationsShouldBePortableMessageParameter">
        <source>As it is declared in your code, parameter {0} of P/Invoke {1} will be {2} bytes wide on {3} platforms. This is not correct, as the actual native declaration of this API indicates it should be {4} bytes wide on {3} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {5}.</source>
        <target state="translated">Kodunuzda bildirildiği gibi, P/Invoke {1} öğesinin {0} parametresi {3} platformlarında {2} bayt genişliğinde olacaktır. Bu API’nin gerçek yerel bildirimi {3} platformlarında {4} genişliğinde olması gerektiğini bildirdiğinden, bu doğru değildir. {5} yerine hangi veri türünün kullanılması gerektiğini belirleme hakkında yardım için MSDN Platform SDK’sı belgelerine başvurun.</target>
        <note />
      </trans-unit>
      <trans-unit id="PInvokeDeclarationsShouldBePortableMessageReturn">
        <source>As it is declared in your code, the return type of P/Invoke {0} will be {1} bytes wide on {2} platforms. This is not correct, as the actual native declaration of this API indicates it should be {3} bytes wide on {2} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {4}.</source>
        <target state="translated">Kodunuzda bildirildiği gibi, P/Invoke {0} öğesinin dönüş türü {2} platformlarında {1} bayt genişliğinde olacaktır. Bu API’nin gerçek yerel bildirimi {2} platformlarında {3} genişliğinde olması gerektiğini bildirdiğinden, bu doğru değildir. {4} yerine hangi veri türünün kullanılması gerektiğini belirleme hakkında yardım için MSDN Platform SDK’sı belgelerine başvurun.</target>
        <note />
      </trans-unit>
      <trans-unit id="SpecifyMarshalingForPInvokeStringArgumentsTitle">
        <source>Specify marshaling for P/Invoke string arguments</source>
        <target state="translated">P/Invoke dize bağımsız değişkenleri için sıralamayı belirtme</target>
        <note />
      </trans-unit>
      <trans-unit id="SpecifyMarshalingForPInvokeStringArgumentsDescription">
        <source>A platform invoke member allows partially trusted callers, has a string parameter, and does not explicitly marshal the string. This can cause a potential security vulnerability.</source>
        <target state="translated">Platform çağırma üyeleri kısmen güvenilen çağıranlara izin verir, bir dize parametresine sahiptir ve dizeyi açıkça sıralamaz. Bu olası bir güvenlik açığına neden olabilir.</target>
        <note />
      </trans-unit>
      <trans-unit id="SpecifyMarshalingForPInvokeStringArgumentsMessageParameter">
        <source>To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</source>
        <target state="translated">Güvenlik riskini azaltmak için {0} parametresini Unicode olarak sıralamak için DllImport.CharSet'i CharSet.Unicode olarak ayarlayın ya da parametreyi belirgin bir şekilde UnmanagedType.LPWStr olarak sıralayın. Bu dizeyi ANSI ya da sistem bağımlı olarak sıralamanız gerekirse, BestFitMapping=false olarak ayarlayın; ek güvenlik için de ThrowOnUnmappableChar=true olarak ayarlayın.</target>
        <note />
      </trans-unit>
      <trans-unit id="SpecifyMarshalingForPInvokeStringArgumentsMessageField">
        <source>To reduce security risk, marshal field {0} as Unicode, by setting StructLayout.CharSet on {1} to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, ensure ThrowOnUnmappableChar is on.</source>
        <target state="translated">Güvenlik riskini azaltmak için, {1} üzerinde StructLayout.CharSet değerini CharSet.Unicode olarak ayarlayarak ya da alanı belirgin bir şekilde UnmanagedType.LPWStr olarak hazırlayarak {0} alanını Unicode olarak hazırlayın. Bu dizeyi ANSI veya sistem bağımlı olarak sıralamanız gerekirse, en iyi uyan eşlemeyi kapatmak için BestFitMapping özniteliğini kullanın, ve ek güvenlik için ThrowOnUnmappableChar’ın açık olduğundan emin olun.</target>
        <note />
      </trans-unit>
      <trans-unit id="SpecifyMarshalingForPInvokeStringArgumentsMessageParameterImplicitAnsi">
        <source>To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</source>
        <target state="translated">Güvenlik riskini azaltmak için {0} parametresini Unicode olarak sıralamak için DllImport.CharSet'i CharSet.Unicode olarak ayarlayın ya da parametreyi belirgin bir şekilde UnmanagedType.LPWStr olarak sıralayın. Bu dizeyi ANSI ya da sistem bağımlı olarak sıralamanız gerekirse, MarshalAs’i açıkça belirtin, BestFitMapping=false olarak ayarlayın; ek güvenlik için de ThrowOnUnmappableChar=true olarak ayarlayın.</target>
        <note />
      </trans-unit>
      <trans-unit id="SpecifyMarshalingForPInvokeStringArgumentsMessageFieldImplicitAnsi">
        <source>To reduce security risk, marshal field {0} as Unicode, by setting StructLayout.CharSet on {1} to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, to turn ThrowOnUnmappableChar on.</source>
        <target state="translated">Güvenlik riskini azaltmak için, {1} üzerinde StructLayout.CharSet değerini CharSet.Unicode olarak ayarlayarak ya da alanı belirgin bir şekilde UnmanagedType.LPWStr olarak hazırlayarak {0} alanını Unicode olarak hazırlayın. Bu dizeyi ANSI veya sistem bağımlı olarak sıralamanız gerekirse, MarshalAs’i açıkça belirtin, en iyi uyan eşlemeyi kapatmak için BestFitMapping özniteliğini kullanın, ve ek güvenlik için ThrowOnUnmappableChar’ı açın.</target>
        <note />
      </trans-unit>
      <trans-unit id="UseManagedEquivalentsOfWin32ApiTitle">
        <source>Use managed equivalents of win32 api</source>
        <target state="translated">Win32 API’sinin yönetilen eşdeğerlerini kullan</target>
        <note />
      </trans-unit>
      <trans-unit id="UseManagedEquivalentsOfWin32ApiDescription">
        <source>An operating system invoke method is defined and a method that has the equivalent functionality is located in the .NET Framework class library.</source>
        <target state="translated">Bir işletim sistemi çağırma yöntemi tanımlanır ve .NET Framework sınıf kitaplığında eşdeğer işleve sahip bir yöntem bulunur.</target>
        <note />
      </trans-unit>
      <trans-unit id="UseManagedEquivalentsOfWin32ApiMessage">
        <source>Use managed equivalents of win32 api</source>
        <target state="translated">Win32 API’sinin yönetilen eşdeğerlerini kullan</target>
        <note />
      </trans-unit>
      <trans-unit id="AlwaysConsumeTheValueReturnedByMethodsMarkedWithPreserveSigAttributeTitle">
        <source>Always consume the value returned by methods marked with PreserveSigAttribute</source>
        <target state="translated">Her zaman PreserveSigAttribute ile işaretlenmiş yöntemler tarafından döndürülen değeri kullanın</target>
        <note />
      </trans-unit>
      <trans-unit id="AlwaysConsumeTheValueReturnedByMethodsMarkedWithPreserveSigAttributeDescription">
        <source>PreserveSigAttribute indicates that a method will return an HRESULT, rather than throwing an exception. Therefore, it is important to consume the HRESULT returned by the method, so that errors can be detected. Generally, this is done by calling Marshal.ThrowExceptionForHR.</source>
        <target state="translated">PreserveSigAttribute, yöntemin bir özel durum oluşturmak yerine bir HRESULT döndüreceğini gösterir. Bu nedenle, hataların algılanabilmesi için yöntem tarafından döndürülen HRESULT’ın kullanılması önemlidir. Genel olarak, bu Marshal.ThrowExceptionForHR çağrılarak yapılır.</target>
        <note />
      </trans-unit>
      <trans-unit id="AlwaysConsumeTheValueReturnedByMethodsMarkedWithPreserveSigAttributeMessage">
        <source>Consume the hresult returned by method '{0}' and call Marshal.ThrowExceptionForHR.</source>
        <target state="translated">'{0}' yöntemi tarafından döndürülen hresult’ı kullanın ve Marshal.ThrowExceptionForHR’ı çağırın.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkBooleanPInvokeArgumentsWithMarshalAsTitle">
        <source>Mark boolean PInvoke arguments with MarshalAs</source>
        <target state="translated">Boolean PInvoke bağımsız değişkenlerini MarshalAs olarak işaretleyin</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkBooleanPInvokeArgumentsWithMarshalAsDescription">
        <source>The Boolean data type has multiple representations in unmanaged code.</source>
        <target state="translated">Boole veri türleri yönetilmeyen kodda birden çok gösterime sahiptir.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkBooleanPInvokeArgumentsWithMarshalAsMessageDefault">
        <source>Add the MarshalAsAttribute to parameter {0} of P/Invoke {1}. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</source>
        <target state="translated">MarshalAsAttribute’u P/Invoke {1} öğesinin {0} parametresine ekleyin. Karşılık gelen yönetilmeyen parametre bir 4 bayt Win32 'BOOL' ise, [MarshalAs(UnmanagedType.Bool)] kullanın. 1-byte C++ 'bool' için, MarshalAs(UnmanagedType.U1) kullanın.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkBooleanPInvokeArgumentsWithMarshalAsMessageReturn">
        <source>Add the MarshalAsAttribute to the return type of P/Invoke {0}. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</source>
        <target state="translated">MarshalAsAttribute’u P/Invoke {0} öğesinin dönüş türüne ekleyin. Karşılık gelen yönetilmeyen dönüş türü bir 4 bayt Win32 'BOOL' ise, [MarshalAs(UnmanagedType.Bool)] kullanın. 1-byte C++ 'bool' için, MarshalAs(UnmanagedType.U1) kullanın.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
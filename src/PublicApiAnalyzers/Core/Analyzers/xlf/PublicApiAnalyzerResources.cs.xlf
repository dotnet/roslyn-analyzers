<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="cs" original="../PublicApiAnalyzerResources.resx">
    <body>
      <trans-unit id="AddAllItemsInDocumentToThePublicApiTitle">
        <source>Add all items in document '{0}' to the public API</source>
        <target state="translated">Přidat všechny položky v dokumentu {0} do veřejného rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAllItemsInProjectToThePublicApiTitle">
        <source>Add all items in project '{0}' to the public API</source>
        <target state="translated">Přidat všechny položky v projektu {0} do veřejného rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAllItemsInTheSolutionToThePublicApiTitle">
        <source>Add all items in the solution to the public API</source>
        <target state="translated">Přidat všechny položky v řešení do veřejného rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotateAllItemsInDocumentToThePublicApiTitle">
        <source>Annotate all items in document '{0}' in the public API</source>
        <target state="translated">Přidat anotaci ke všem položkám v dokumentu {0} ve veřejném rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotateAllItemsInProjectToThePublicApiTitle">
        <source>Annotate all items in project '{0}' in the public API</source>
        <target state="translated">Přidat anotaci ke všem položkám v projektu {0} ve veřejném rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotateAllItemsInTheSolutionToThePublicApiTitle">
        <source>Annotate all items in the solution in the public API</source>
        <target state="translated">Přidat anotaci ke všem položkám v řešení ve veřejném rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotatePublicApiDescription">
        <source>All public types and members should be declared with nullability annotations in PublicAPI.txt. This draws attention to API nullability changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">Všechny veřejné typy a členy by se měly deklarovat s anotacemi o možnosti použití hodnoty null v souboru PublicAPI.txt. To přitáhne pozornost ke změnám možnosti použití hodnoty null u rozhraní API při revizích a v historii správy zdrojového kódu a pomůže předejít změnám způsobujícím chybu.</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotatePublicApiMessage">
        <source>Symbol '{0}' is missing nullability annotations in the declared API</source>
        <target state="translated">U symbolu {0} chybí v deklarovaném rozhraní API anotace o možnosti použití hodnoty null.</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotatePublicApiTitle">
        <source>Annotate nullability of public types and members in the declared API</source>
        <target state="translated">Přidat anotace o možnosti použití hodnoty null u veřejných typů a členů v deklarovaném rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Do not add multiple overloads with optional parameters'. See '{1}' for details.</source>
        <target state="translated">Symbol {0} porušuje požadavek na zpětnou kompatibilitu: Nepřidávat více přetížení s nepovinnými parametry. Podrobnosti najdete tady: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersTitle">
        <source>Do not add multiple public overloads with optional parameters</source>
        <target state="translated">Nepřidávat více přetížení s nepovinnými parametry</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiDescription">
        <source>All public types and members should be declared in PublicAPI.txt. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">Všechny veřejné typy a členy by se měly deklarovat v souboru PublicAPI.txt. To přivádí pozornost ke změnám rozhraní API v revizích a historii správy zdrojového kódu a pomáhá předcházet změnám způsobujícím chybu.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiMessage">
        <source>Symbol '{0}' is not part of the declared API</source>
        <target state="translated">Symbol {0} není součástí deklarovaného rozhraní API.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiTitle">
        <source>Add public types and members to the declared API</source>
        <target state="translated">Přidat veřejné typy a členy do deklarovaného rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesMessage">
        <source>The symbol '{0}' appears more than once in the public API files</source>
        <target state="translated">Symbol {0} se v souborech veřejného rozhraní API vyskytuje více než jednou.</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesTitle">
        <source>Do not duplicate symbols in public API files</source>
        <target state="translated">Neduplikovat symboly v souborech veřejných rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="EnableNullableInProjectToThePublicApiTitle">
        <source>Enable nullability annotations in the public API for project '{0}'</source>
        <target state="translated">Povolit anotace o možnosti použití hodnoty null ve veřejném rozhraní API pro projekt {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="EnableNullableInTheSolutionToThePublicApiTitle">
        <source>Enable nullability annotations in the public API for the solution</source>
        <target state="translated">Povolit anotace o možnosti použití hodnoty null ve veřejném rozhraní API pro řešení</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeMessage">
        <source>Constructor makes its noninheritable base class inheritable, thereby exposing its protected members</source>
        <target state="translated">Konstruktor nastavuje základní třídu, ze které se nedá dědit, na třídu, ze které se dědit dá, čímž zpřístupňuje své chráněné členy.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeTitle">
        <source>Constructor make noninheritable base class inheritable</source>
        <target state="translated">Konstruktor činí z nedědičné základní třídy dědičnou.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObliviousPublicApiDescription">
        <source>All public members should use either nullable or non-nullable reference types, but no oblivious reference types.</source>
        <target state="translated">Všechny veřejné členy by měly používat odkazové typy s možnou hodnotou null, nebo bez ní, ale ne odkazové typy bez určení možnosti použití hodnoty null.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObliviousPublicApiMessage">
        <source>Symbol '{0}' uses some oblivious reference types</source>
        <target state="translated">Symbol {0} používá některé odkazové typy bez určení možnosti použití hodnoty null.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObliviousPublicApiTitle">
        <source>Public members should not use oblivious types</source>
        <target state="translated">Veřejné členy by neměly používat typy bez určení možnosti použití hodnoty null</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Public API with optional parameter(s) should have the most parameters amongst its public overloads'. See '{1}' for details.</source>
        <target state="translated">Symbol {0} porušuje požadavek na zpětnou kompatibilitu: Veřejné rozhraní API s nepovinnými parametry by mělo mít ze všech veřejných přetížení nejvíce parametrů. Podrobnosti najdete tady: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersTitle">
        <source>Public API with optional parameter(s) should have the most parameters amongst its public overloads</source>
        <target state="translated">Veřejné rozhraní API s nepovinnými parametry by mělo mít ze všech veřejných přetížení nejvíce parametrů</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFileMissingMessage">
        <source>Public API file '{0}' is missing or not marked as an additional analyzer file</source>
        <target state="translated">Soubor veřejného rozhraní API {0} chybí nebo není označený jako doplňkový soubor analyzátoru.</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFileMissingTitle">
        <source>Missing shipped or unshipped public API file</source>
        <target state="translated">Chybí vydaný nebo nevydaný soubor veřejného rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidMessage">
        <source>The contents of the public API files are invalid: {0}</source>
        <target state="translated">Obsah souborů veřejných rozhraní API není platný: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidTitle">
        <source>The contents of the public API files are invalid</source>
        <target state="translated">Obsah souborů veřejných rozhraní API není platný</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingMessage">
        <source>The solution must contain two files with the type "AdditionalFiles": PublicAPI.Unshipped.txt and PublicAPI.Shipped.txt. At least one of these files is missing or has the wrong type.</source>
        <target state="translated">Řešení musí obsahovat dva soubory typu AdditionalFiles: PublicAPI.Unshipped.txt a PublicAPI.Shipped.txt. Nejméně jeden z těchto souborů chybí nebo nemá správný typ.</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingTitle">
        <source>One or both of the public API files are missing</source>
        <target state="translated">Chybí nejméně jeden soubor veřejného rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitConstructorErrorMessageName">
        <source>implicit constructor for '{0}'</source>
        <target state="translated">implicitní konstruktor pro {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitGetAccessor">
        <source>implicit get-accessor for '{0}'</source>
        <target state="translated">implicitní přístupový objekt get pro {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitSetAccessor">
        <source>implicit set-accessor for '{0}'</source>
        <target state="translated">implicitní přístupový objekt set pro {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiDescription">
        <source>When removing a public type or member the corresponding entry in PublicAPI.txt should also be removed. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">Když se odebírá veřejný typ nebo člen, měla by se odebrat i odpovídající položka v souboru PublicAPI.txt. To přivádí pozornost ke změnám rozhraní API v revizích a historii správy zdrojového kódu a pomáhá předcházet změnám způsobujícím chybu.</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiMessage">
        <source>Symbol '{0}' is part of the declared API, but is either not public or could not be found</source>
        <target state="translated">Symbol {0} je součástí deklarovaného rozhraní API, ale buď není veřejný, nebo se ho nepovedlo najít.</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiTitle">
        <source>Remove deleted types and members from the declared API</source>
        <target state="translated">Odebrat odstraněné typy a členy z deklarovaného rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldAnnotateApiFilesDescription">
        <source>PublicAPI.txt files should have `#nullable enable` to track nullability information, or this diagnostic should be suppressed. With nullability enabled, PublicAPI.txt records which types are nullable (suffix `?` on type) or non-nullable (suffix `!`). It also tracks any API that is still using an oblivious reference type (prefix `~` on line).</source>
        <target state="translated">Soubory PublicAPI.txt by měly mít #nullable enable, aby se sledovala informace o možné hodnotě null, nebo by se tato diagnostika měla potlačit. Když se možnost nastavit hodnotu null povolí, PublicAPI.txt bude uchovávat informace o tom, které typy bude možné nastavit na null (přípona typu ?) a které ne (přípona !). Kromě toho sleduje všechna rozhraní API, která stále používají typy bez určení možnosti použití hodnoty null (předpona ~ na řádku).</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldAnnotateApiFilesMessage">
        <source>PublicAPI.txt is missing '#nullable enable', so the nullability annotations of API isn't recorded. It is recommended to enable this tracking.</source>
        <target state="translated">V souboru PublicAPI.txt chybí #nullable enable, takže se nezaznamenají anotace o možnosti použití hodnoty null u rozhraní API. Doporučuje se toto sledování povolit.</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldAnnotateApiFilesTitle">
        <source>Enable tracking of nullability of reference types in the declared API</source>
        <target state="translated">Povolit sledování možnosti použití hodnoty null pro typy odkazů v deklarovaném rozhraní API</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="cs" original="../PublicApiAnalyzerResources.resx">
    <body>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Do not add multiple overloads with optional parameters'. See '{1}' for details.</source>
        <target state="translated">Symbol {0} porušuje požadavek na zpětnou kompatibilitu: Nepřidávat více přetížení s nepovinnými parametry. Podrobnosti najdete tady: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersTitle">
        <source>Do not add multiple public overloads with optional parameters</source>
        <target state="translated">Nepřidávat více přetížení s nepovinnými parametry</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiDescription">
        <source>All public types and members should be declared in PublicAPI.txt. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">Všechny veřejné typy a členy by se měly deklarovat v souboru PublicAPI.txt. To přivádí pozornost ke změnám rozhraní API v revizích a historii správy zdrojového kódu a pomáhá předcházet změnám způsobujícím chybu.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiMessage">
        <source>Symbol '{0}' is not part of the declared API.</source>
        <target state="translated">Symbol {0} není součástí deklarovaného rozhraní API.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiTitle">
        <source>Add public types and members to the declared API</source>
        <target state="translated">Přidat veřejné typy a členy do deklarovaného rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesMessage">
        <source>The symbol '{0}' appears more than once in the public API files.</source>
        <target state="translated">Symbol {0} se v souborech veřejného rozhraní API vyskytuje více než jednou.</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesTitle">
        <source>Do not duplicate symbols in public API files</source>
        <target state="translated">Neduplikovat symboly v souborech veřejných rozhraní API</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeMessage">
        <source>Constructor makes its noninheritable base class inheritable, thereby exposing its protected members.</source>
        <target state="translated">Konstruktor nastavuje základní třídu, ze které se nedá dědit, na třídu, ze které se dědit dá, čímž zpřístupňuje své chráněné členy.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeTitle">
        <source>Constructor make noninheritable base class inheritable</source>
        <target state="translated">Konstruktor činí z nedědičné základní třídy dědičnou.</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Public API with optional parameter(s) should have the most parameters amongst its public overloads'. See '{1}' for details.</source>
        <target state="translated">Symbol {0} porušuje požadavek na zpětnou kompatibilitu: Veřejné rozhraní API s nepovinnými parametry by mělo mít ze všech veřejných přetížení nejvíce parametrů. Podrobnosti najdete tady: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersTitle">
        <source>Public API with optional parameter(s) should have the most parameters amongst its public overloads.</source>
        <target state="translated">Veřejné rozhraní API s nepovinnými parametry by mělo mít ze všech veřejných přetížení nejvíce parametrů</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidMessage">
        <source>The contents of the public API files are invalid: {0}</source>
        <target state="translated">Obsah souborů veřejných rozhraní API není platný: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidTitle">
        <source>The contents of the public API files are invalid</source>
        <target state="translated">Obsah souborů veřejných rozhraní API není platný</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitConstructorErrorMessageName">
        <source>implicit constructor for {0}</source>
        <target state="translated">implicitní konstruktor pro {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitGetAccessor">
        <source>implicit get-accessor for {0}</source>
        <target state="translated">implicitní přístupový objekt get pro {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitSetAccessor">
        <source>implicit set-accessor for {0}</source>
        <target state="translated">implicitní přístupový objekt set pro {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiDescription">
        <source>When removing a public type or member the corresponding entry in PublicAPI.txt should also be removed. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">Když se odebírá veřejný typ nebo člen, měla by se odebrat i odpovídající položka v souboru PublicAPI.txt. To přivádí pozornost ke změnám rozhraní API v revizích a historii správy zdrojového kódu a pomáhá předcházet změnám způsobujícím chybu.</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiMessage">
        <source>Symbol '{0}' is part of the declared API, but is either not public or could not be found</source>
        <target state="translated">Symbol {0} je součástí deklarovaného rozhraní API, ale buď není veřejný, nebo se ho nepovedlo najít.</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiTitle">
        <source>Remove deleted types and members from the declared API</source>
        <target state="translated">Odebrat odstraněné typy a členy z deklarovaného rozhraní API</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
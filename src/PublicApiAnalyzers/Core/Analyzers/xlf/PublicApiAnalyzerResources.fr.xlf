<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="fr" original="../PublicApiAnalyzerResources.resx">
    <body>
      <trans-unit id="AddAllItemsInDocumentToThePublicApiTitle">
        <source>Add all items in document '{0}' to the public API</source>
        <target state="translated">Ajouter tous les éléments du document '{0}' à l'API publique</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAllItemsInProjectToThePublicApiTitle">
        <source>Add all items in project '{0}' to the public API</source>
        <target state="translated">Ajouter tous les éléments du projet '{0}' à l'API publique</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAllItemsInTheSolutionToThePublicApiTitle">
        <source>Add all items in the solution to the public API</source>
        <target state="translated">Ajouter tous les éléments de la solution à l'API publique</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotateAllItemsInDocumentToThePublicApiTitle">
        <source>Annotate all items in document '{0}' in the public API</source>
        <target state="translated">Annoter tous les éléments du document '{0}' dans l'API publique</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotateAllItemsInProjectToThePublicApiTitle">
        <source>Annotate all items in project '{0}' in the public API</source>
        <target state="translated">Annoter tous les éléments du projet '{0}' dans l'API publique</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotateAllItemsInTheSolutionToThePublicApiTitle">
        <source>Annotate all items in the solution in the public API</source>
        <target state="translated">Annoter tous les éléments de la solution dans l'API publique</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotatePublicApiDescription">
        <source>All public types and members should be declared with nullability annotations in PublicAPI.txt. This draws attention to API nullability changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">Tous les types et membres publics doivent être déclarés avec des annotations de nullabilité dans PublicAPI.txt. Cela permet d'attirer l'attention sur les changements apportés à la nullabilité de l'API dans les revues de code et l'historique de contrôle de code source. Cela permet également d'éviter les changements cassants.</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotatePublicApiMessage">
        <source>Symbol '{0}' is missing nullability annotations in the declared API</source>
        <target state="translated">Il manque des annotations de nullabilité pour le symbole '{0}' dans l'API déclarée</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotatePublicApiTitle">
        <source>Annotate nullability of public types and members in the declared API</source>
        <target state="translated">Annoter la nullabilité des types et des membres publics dans l'API déclarée</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Do not add multiple overloads with optional parameters'. See '{1}' for details.</source>
        <target state="translated">Le symbole '{0}' viole l'exigence de compatibilité descendante : 'Ne pas ajouter plusieurs surcharges publiques avec des paramètres optionnels'. Pour plus d'informations, consultez '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersTitle">
        <source>Do not add multiple public overloads with optional parameters</source>
        <target state="translated">Ne pas ajouter plusieurs surcharges publiques avec des paramètres optionnels</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiDescription">
        <source>All public types and members should be declared in PublicAPI.txt. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">Tous les types et membres publics doivent être déclarés dans PublicAPI.txt. Cela permet d'attirer l'attention sur les changements apportés à l'API dans les revues de code et l'historique de contrôle de code source. Cela permet également d'éviter les changements cassants.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiMessage">
        <source>Symbol '{0}' is not part of the declared API</source>
        <target state="translated">Le symbole '{0}' ne fait pas partie de l'API déclarée</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiTitle">
        <source>Add public types and members to the declared API</source>
        <target state="translated">Ajouter des types et membres publics à l'API déclarée</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesMessage">
        <source>The symbol '{0}' appears more than once in the public API files</source>
        <target state="translated">Le symbole '{0}' apparaît plusieurs fois dans les fichiers de l'API publique</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesTitle">
        <source>Do not duplicate symbols in public API files</source>
        <target state="translated">Ne pas dupliquer les symboles dans les fichiers d'une API publique</target>
        <note />
      </trans-unit>
      <trans-unit id="EnableNullableInProjectToThePublicApiTitle">
        <source>Enable nullability annotations in the public API for project '{0}'</source>
        <target state="translated">Activer les annotations de nullabilité dans l'API publique pour le projet '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="EnableNullableInTheSolutionToThePublicApiTitle">
        <source>Enable nullability annotations in the public API for the solution</source>
        <target state="translated">Activer les annotations de nullabilité dans l'API publique pour la solution</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeMessage">
        <source>Constructor makes its noninheritable base class inheritable, thereby exposing its protected members</source>
        <target state="translated">Le constructeur fait de sa classe de base non héritable une classe héritable, exposant ainsi ses membres protégés</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeTitle">
        <source>Constructor make noninheritable base class inheritable</source>
        <target state="translated">Le constructeur fait de la classe de base noninheritable une classe inheritable</target>
        <note />
      </trans-unit>
      <trans-unit id="ObliviousPublicApiDescription">
        <source>All public members should use either nullable or non-nullable reference types, but no oblivious reference types.</source>
        <target state="translated">Tous les membres publics doivent utiliser des types référence nullables ou non nullables, mais aucun type référence inconscient.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObliviousPublicApiMessage">
        <source>Symbol '{0}' uses some oblivious reference types</source>
        <target state="translated">Le symbole '{0}' utilise des types référence inconscients</target>
        <note />
      </trans-unit>
      <trans-unit id="ObliviousPublicApiTitle">
        <source>Public members should not use oblivious types</source>
        <target state="translated">Les membres publics ne doivent pas utiliser de types inconscients</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Public API with optional parameter(s) should have the most parameters amongst its public overloads'. See '{1}' for details.</source>
        <target state="translated">Le symbole '{0}' viole l'exigence de compatibilité descendante : 'L'API publique avec un ou plusieurs paramètres optionnels doit avoir le plus de paramètres possibles parmi ses surcharges publiques'. Pour plus d'informations, consultez '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersTitle">
        <source>Public API with optional parameter(s) should have the most parameters amongst its public overloads</source>
        <target state="translated">L'API publique avec un ou plusieurs paramètres optionnels doit avoir le plus de paramètres possible parmi ses surcharges publiques</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFileMissingMessage">
        <source>Public API file '{0}' is missing or not marked as an additional analyzer file</source>
        <target state="translated">Le fichier d'API publique '{0}' est manquant ou n'est pas marqué en tant que fichier d'analyseur supplémentaire</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFileMissingTitle">
        <source>Missing shipped or unshipped public API file</source>
        <target state="translated">Absence du fichier d'API publique fournie ou non fournie</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidMessage">
        <source>The contents of the public API files are invalid: {0}</source>
        <target state="translated">Le contenu des fichiers de l'API publique est non valide : {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidTitle">
        <source>The contents of the public API files are invalid</source>
        <target state="translated">Le contenu des fichiers de l'API publique est non valide</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingMessage">
        <source>The solution must contain two files with the type "AdditionalFiles": PublicAPI.Unshipped.txt and PublicAPI.Shipped.txt. At least one of these files is missing or has the wrong type.</source>
        <target state="translated">La solution doit contenir deux fichiers ayant le type "AdditionalFiles" : PublicAPI.Unshipped.txt et PublicAPI.Shipped.txt. L'un de ces fichiers est manquant, ou son type est incorrect.</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingTitle">
        <source>One or both of the public API files are missing</source>
        <target state="translated">Il manque l'un des deux fichiers d'API publiques, ou les deux</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitConstructorErrorMessageName">
        <source>implicit constructor for '{0}'</source>
        <target state="translated">constructeur implicite pour '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitGetAccessor">
        <source>implicit get-accessor for '{0}'</source>
        <target state="translated">accesseur get implicite pour '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitSetAccessor">
        <source>implicit set-accessor for '{0}'</source>
        <target state="translated">accesseur set implicite pour '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiDescription">
        <source>When removing a public type or member the corresponding entry in PublicAPI.txt should also be removed. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">Quand vous supprimez un type ou un membre public, l'entrée correspondante dans PublicAPI.txt doit également être supprimée. Cela attire l'attention sur les changements apportés à l'API dans les revues de code et l'historique du contrôle de code source. De plus, cela permet d'éviter les changements cassants.</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiMessage">
        <source>Symbol '{0}' is part of the declared API, but is either not public or could not be found</source>
        <target state="translated">Le symbole '{0}' fait partie de l'API déclarée, mais il n'est pas public ou est introuvable</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiTitle">
        <source>Remove deleted types and members from the declared API</source>
        <target state="translated">Enlever les types et membres supprimés de l'API déclarée</target>
        <note />
      </trans-unit>
      <trans-unit id="RemovedApiIsNotActuallyRemovedMessage">
        <source>Symbol '{0}' is marked as removed but it isn't deleted in source code</source>
        <target state="translated">Le symbole « {0} » est marqué comme supprimé, mais il n’est pas supprimé dans le code source</target>
        <note />
      </trans-unit>
      <trans-unit id="RemovedApiIsNotActuallyRemovedTitle">
        <source>Public API is marked as removed but it exists in source code</source>
        <target state="translated">L’API publique est marquée comme étant supprimée, mais elle existe dans le code source</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldAnnotateApiFilesDescription">
        <source>PublicAPI.txt files should have `#nullable enable` to track nullability information, or this diagnostic should be suppressed. With nullability enabled, PublicAPI.txt records which types are nullable (suffix `?` on type) or non-nullable (suffix `!`). It also tracks any API that is still using an oblivious reference type (prefix `~` on line).</source>
        <target state="translated">Les fichiers PublicAPI.txt doivent avoir '#nullable enable' pour effectuer le suivi des informations de possibilité de valeur null ou ce diagnostic doit être supprimé. Si l'option de possibilité de valeur null est activée, PublicAPI.txt enregistre les types nullable (suffixe '?' sur le type) ou non-nullable (suffixe '!'). Il effectue également le suivi des API qui utilisent encore un type référence inconscient (préfixe '~' sur la ligne).</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldAnnotateApiFilesMessage">
        <source>PublicAPI.txt is missing '#nullable enable', so the nullability annotations of API isn't recorded. It is recommended to enable this tracking.</source>
        <target state="translated">PublicAPI.txt ne contient pas '#nullable enable'. Les annotations de nullabilité de l'API ne sont donc pas enregistrées. Il est recommandé d'activer ce suivi.</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldAnnotateApiFilesTitle">
        <source>Enable tracking of nullability of reference types in the declared API</source>
        <target state="translated">Activer le suivi de la possibilité de valeur null des types référence dans l'API déclarée</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
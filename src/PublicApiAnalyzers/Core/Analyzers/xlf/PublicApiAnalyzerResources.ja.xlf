<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ja" original="../PublicApiAnalyzerResources.resx">
    <body>
      <trans-unit id="AddAllItemsInDocumentToThePublicApiTitle">
        <source>Add all items in document '{0}' to the public API</source>
        <target state="translated">ドキュメント '{0}' 内のすべての項目のパブリック API への追加</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAllItemsInProjectToThePublicApiTitle">
        <source>Add all items in project '{0}' to the public API</source>
        <target state="translated">プロジェクト '{0}' 内のすべての項目のパブリック API への追加</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAllItemsInTheSolutionToThePublicApiTitle">
        <source>Add all items in the solution to the public API</source>
        <target state="translated">ソリューション内のすべての項目のパブリック API への追加</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotateAllItemsInDocumentToThePublicApiTitle">
        <source>Annotate all items in document '{0}' in the public API</source>
        <target state="translated">パブリック API のドキュメント '{0}' 内のすべての項目に注釈を付ける</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotateAllItemsInProjectToThePublicApiTitle">
        <source>Annotate all items in project '{0}' in the public API</source>
        <target state="translated">パブリック API のプロジェクト '{0}' 内のすべての項目に注釈を付ける</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotateAllItemsInTheSolutionToThePublicApiTitle">
        <source>Annotate all items in the solution in the public API</source>
        <target state="translated">パブリック API のソリューション内のすべての項目に注釈を付ける</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotatePublicApiDescription">
        <source>All public types and members should be declared with nullability annotations in PublicAPI.txt. This draws attention to API nullability changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">すべてのパブリックの型とメンバーは、NULL 許容の注釈を付けて、PublicAPI.txt で宣言する必要があります。これにより、コード レビューとソース管理履歴で API の NULL 許容の変更に注意を引くことができ、破壊的変更を防ぐことができます。</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotatePublicApiMessage">
        <source>Symbol '{0}' is missing nullability annotations in the declared API</source>
        <target state="translated">シンボル '{0}' では、宣言された API に NULL 許容の注釈がありません</target>
        <note />
      </trans-unit>
      <trans-unit id="AnnotatePublicApiTitle">
        <source>Annotate nullability of public types and members in the declared API</source>
        <target state="translated">宣言された API のパブリックの型とメンバーの NULL 許容に注釈を付ける</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Do not add multiple overloads with optional parameters'. See '{1}' for details.</source>
        <target state="translated">シンボル '{0}' は下位互換性の要件、「省略可能なパラメーターを持つ複数のオーバーロードを追加しない」に違反しています。詳細は '{1}' を参照してください。</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersTitle">
        <source>Do not add multiple public overloads with optional parameters</source>
        <target state="translated">省略可能なパラメーターを持つ複数のパブリック オーバーロードを追加しない</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiDescription">
        <source>All public types and members should be declared in PublicAPI.txt. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">すべてのパブリックの型とメンバーは、PublicAPI.txt で宣言する必要があります。これにより、コード レビューとソース管理履歴で API 変更に注意を引くことができ、破壊的変更を防ぐことができます。</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiMessage">
        <source>Symbol '{0}' is not part of the declared API</source>
        <target state="translated">シンボル '{0}' は宣言された API の一部ではありません</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiTitle">
        <source>Add public types and members to the declared API</source>
        <target state="translated">宣言された API にパブリックの型とメンバーを追加する</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesMessage">
        <source>The symbol '{0}' appears more than once in the public API files</source>
        <target state="translated">シンボル '{0}' が、パブリック API ファイルに複数含まれています</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesTitle">
        <source>Do not duplicate symbols in public API files</source>
        <target state="translated">パブリック API ファイル内でシンボルを重複させない</target>
        <note />
      </trans-unit>
      <trans-unit id="EnableNullableInProjectToThePublicApiTitle">
        <source>Enable nullability annotations in the public API for project '{0}'</source>
        <target state="translated">プロジェクト '{0}' のパブリック API で、NULL 許容の注釈を有効にする</target>
        <note />
      </trans-unit>
      <trans-unit id="EnableNullableInTheSolutionToThePublicApiTitle">
        <source>Enable nullability annotations in the public API for the solution</source>
        <target state="translated">ソリューションのパブリック API で、NULL 許容の注釈を有効にする</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeMessage">
        <source>Constructor makes its noninheritable base class inheritable, thereby exposing its protected members</source>
        <target state="translated">コンストラクターは、その継承不可能な基底クラスを継承可能にすることで、保護されたメンバーを公開します</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeTitle">
        <source>Constructor make noninheritable base class inheritable</source>
        <target state="translated">コンストラクターにより、継承不可能な基底クラスが継承可能になります</target>
        <note />
      </trans-unit>
      <trans-unit id="ObliviousPublicApiDescription">
        <source>All public members should use either nullable or non-nullable reference types, but no oblivious reference types.</source>
        <target state="translated">すべてのパブリック メンバーは、Null 許容参照型と null 非許容参照型のいずれかを使用する必要がありますが、oblivious 参照型は使用しません。</target>
        <note />
      </trans-unit>
      <trans-unit id="ObliviousPublicApiMessage">
        <source>Symbol '{0}' uses some oblivious reference types</source>
        <target state="translated">シンボル '{0}' ではいくつかの oblivious 参照型が使用されています</target>
        <note />
      </trans-unit>
      <trans-unit id="ObliviousPublicApiTitle">
        <source>Public members should not use oblivious types</source>
        <target state="translated">パブリック メンバーによる oblivious 型の使用禁止</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Public API with optional parameter(s) should have the most parameters amongst its public overloads'. See '{1}' for details.</source>
        <target state="translated">シンボル '{0}' は下位互換性の要件、「省略可能なパラメーターを持つパブリック API は、そのパブリック オーバーロード内のほとんどのパラメーターを持つ必要がある」に違反しています。詳細は '{1}' を参照してください。</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersTitle">
        <source>Public API with optional parameter(s) should have the most parameters amongst its public overloads</source>
        <target state="translated">省略可能なパラメーターを持つパブリック API は、そのパブリック オーバーロード内のほとんどのパラメーターを持つ必要がある</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFileMissingMessage">
        <source>Public API file '{0}' is missing or not marked as an additional analyzer file</source>
        <target state="translated">パブリック API ファイル '{0}' が存在しないか、追加のアナライザー ファイルとしてマークされていません</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFileMissingTitle">
        <source>Missing shipped or unshipped public API file</source>
        <target state="translated">出荷済みまたは未出荷のパブリック API ファイルがありません</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidMessage">
        <source>The contents of the public API files are invalid: {0}</source>
        <target state="translated">パブリック API ファイルのコンテンツが無効です: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidTitle">
        <source>The contents of the public API files are invalid</source>
        <target state="translated">パブリック API ファイルのコンテンツが無効です</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingMessage">
        <source>The solution must contain two files with the type "AdditionalFiles": PublicAPI.Unshipped.txt and PublicAPI.Shipped.txt. At least one of these files is missing or has the wrong type.</source>
        <target state="translated">ソリューションには、種類が "AdditionalFiles" の 2 つのファイル (PublicAPI.Unshipped.txt と PublicAPI.Shipped.txt) が含まれている必要があります。これらのファイルのうち少なくとも 1 つが見つからないか、種類が正しくありません。</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingTitle">
        <source>One or both of the public API files are missing</source>
        <target state="translated">パブリック API ファイルの 1 つまたは両方が見つからない</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitConstructorErrorMessageName">
        <source>implicit constructor for '{0}'</source>
        <target state="translated">'{0}' の暗黙的なコンストラクター</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitGetAccessor">
        <source>implicit get-accessor for '{0}'</source>
        <target state="translated">'{0}' の暗黙的な get アクセサー</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitSetAccessor">
        <source>implicit set-accessor for '{0}'</source>
        <target state="translated">'{0}' の暗黙的な set アクセサー</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiDescription">
        <source>When removing a public type or member the corresponding entry in PublicAPI.txt should also be removed. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">パブリックの型またはメンバーを削除する際、PublicAPI.txt の対応するエントリも削除する必要があります。これにより、コード レビューとソース管理履歴で API 変更に注意を引くことができ、破壊的変更を防ぐことができます。</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiMessage">
        <source>Symbol '{0}' is part of the declared API, but is either not public or could not be found</source>
        <target state="translated">シンボル '{0}' は宣言された API の一部ですが、パブリックではないか、見つかりませんでした</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiTitle">
        <source>Remove deleted types and members from the declared API</source>
        <target state="translated">削除された型とメンバーを、宣言された API から削除する</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldAnnotateApiFilesDescription">
        <source>PublicAPI.txt files should have `#nullable enable` to track nullability information, or this diagnostic should be suppressed. With nullability enabled, PublicAPI.txt records which types are nullable (suffix `?` on type) or non-nullable (suffix `!`). It also tracks any API that is still using an oblivious reference type (prefix `~` on line).</source>
        <target state="translated">PublicAPI.txt ファイルでは、NULL 値の許容情報を追跡するために '#nullable enable' を指定する必要があります。指定されていない場合は、この診断を中止する必要があります。NULL 値の許容を有効にすると、PublicAPI.txt は、どの型が null 許容 (型にサフィックス '?' を含む) または null 非許容 (サフィックス '!') かを記録します。また、oblivious 参照型 (行にプレフィックス '~' を含む) を使用している API を追跡します。</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldAnnotateApiFilesMessage">
        <source>PublicAPI.txt is missing '#nullable enable', so the nullability annotations of API isn't recorded. It is recommended to enable this tracking.</source>
        <target state="translated">PublicAPI.txt に '#nullable enable' がありません。そのため、API の NULL 許容の注釈は記録されていません。この追跡を有効にすることをお勧めします。</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldAnnotateApiFilesTitle">
        <source>Enable tracking of nullability of reference types in the declared API</source>
        <target state="translated">宣言された API 内で参照型の NULL 値の許容を追跡できるようにする</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ja" original="../PublicApiAnalyzerResources.resx">
    <body>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Do not add multiple overloads with optional parameters'. See '{1}' for details.</source>
        <target state="translated">シンボル '{0}' は下位互換性の要件、「省略可能なパラメーターを持つ複数のオーバーロードを追加しない」に違反しています。詳細は '{1}' を参照してください。</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersTitle">
        <source>Do not add multiple public overloads with optional parameters</source>
        <target state="translated">省略可能なパラメーターを持つ複数のパブリック オーバーロードを追加しない</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiDescription">
        <source>All public types and members should be declared in PublicAPI.txt. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">すべてのパブリックの型とメンバーは、PublicAPI.txt で宣言する必要があります。これにより、コード レビューとソース管理履歴で API 変更に注意を引くことができ、破壊的変更を防ぐことができます。</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiMessage">
        <source>Symbol '{0}' is not part of the declared API.</source>
        <target state="translated">シンボル '{0}' は宣言された API の一部ではありません。</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiTitle">
        <source>Add public types and members to the declared API</source>
        <target state="translated">宣言された API にパブリックの型とメンバーを追加する</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesMessage">
        <source>The symbol '{0}' appears more than once in the public API files.</source>
        <target state="translated">シンボル '{0}' が、パブリック API ファイルに複数含まれています。</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesTitle">
        <source>Do not duplicate symbols in public API files</source>
        <target state="translated">パブリック API ファイル内でシンボルを重複させない</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeMessage">
        <source>Constructor makes its noninheritable base class inheritable, thereby exposing its protected members.</source>
        <target state="translated">コンストラクターは、その継承不可能な基底クラスを継承可能にすることで、保護されたメンバーを公開します。</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeTitle">
        <source>Constructor make noninheritable base class inheritable</source>
        <target state="translated">コンストラクターにより、継承不可能な基底クラスが継承可能になります</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Public API with optional parameter(s) should have the most parameters amongst its public overloads'. See '{1}' for details.</source>
        <target state="translated">シンボル '{0}' は下位互換性の要件、「省略可能なパラメーターを持つパブリック API は、そのパブリック オーバーロード内のほとんどのパラメーターを持つ必要がある」に違反しています。詳細は '{1}' を参照してください。</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersTitle">
        <source>Public API with optional parameter(s) should have the most parameters amongst its public overloads.</source>
        <target state="translated">省略可能なパラメーターを持つパブリック API は、そのパブリック オーバーロード内のほとんどのパラメーターを持つ必要があります。</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidMessage">
        <source>The contents of the public API files are invalid: {0}</source>
        <target state="translated">パブリック API ファイルのコンテンツが無効です: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidTitle">
        <source>The contents of the public API files are invalid</source>
        <target state="translated">パブリック API ファイルのコンテンツが無効です</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingMessage">
        <source>The solution must contain two files with the type "AdditionalFiles": PublicAPI.Unshipped.txt and PublicAPI.Shipped.txt. At least one of these files is missing or has the wrong type.</source>
        <target state="translated">ソリューションには、種類が "AdditionalFiles" の 2 つのファイル (PublicAPI.Unshipped.txt と PublicAPI.Shipped.txt) が含まれている必要があります。これらのファイルのうち少なくとも 1 つが見つからないか、種類が正しくありません。</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingTitle">
        <source>One or both of the public API files are missing</source>
        <target state="translated">パブリック API ファイルの 1 つまたは両方が見つからない</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitConstructorErrorMessageName">
        <source>implicit constructor for {0}</source>
        <target state="translated">{0} の暗黙的なコンストラクター </target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitGetAccessor">
        <source>implicit get-accessor for {0}</source>
        <target state="translated">{0} の暗黙的な get アクセサー</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitSetAccessor">
        <source>implicit set-accessor for {0}</source>
        <target state="translated">{0} の暗黙的な set アクセサー</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiDescription">
        <source>When removing a public type or member the corresponding entry in PublicAPI.txt should also be removed. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">パブリックの型またはメンバーを削除する際、PublicAPI.txt の対応するエントリも削除する必要があります。これにより、コード レビューとソース管理履歴で API 変更に注意を引くことができ、破壊的変更を防ぐことができます。</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiMessage">
        <source>Symbol '{0}' is part of the declared API, but is either not public or could not be found</source>
        <target state="translated">シンボル '{0}' は宣言された API の一部ですが、パブリックではないか、見つかりませんでした</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiTitle">
        <source>Remove deleted types and members from the declared API</source>
        <target state="translated">削除された型とメンバーを、宣言された API から削除する</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
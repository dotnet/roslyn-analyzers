<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pl" original="../PublicApiAnalyzerResources.resx">
    <body>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Do not add multiple overloads with optional parameters'. See '{1}' for details.</source>
        <target state="translated">Symbol „{0}” narusza wymaganie wstecznej zgodności: „Nie dodawaj wielu przeciążeń z opcjonalnymi parametrami”. Zobacz „{1}”, aby uzyskać szczegółowe informacje.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersTitle">
        <source>Do not add multiple public overloads with optional parameters</source>
        <target state="translated">Nie dodawaj wielu przeciążeń publicznych z opcjonalnymi parametrami</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiDescription">
        <source>All public types and members should be declared in PublicAPI.txt. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">Wszystkie publiczne typy i składowe powinny być zadeklarowane w pliku PublicAPI.txt. To przyciąga uwagę do zmian interfejsu API w przeglądach kodu i historii kontroli źródła oraz pomaga zapobiegać zmianom powodującym nieprawidłowe działanie.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiMessage">
        <source>Symbol '{0}' is not part of the declared API.</source>
        <target state="translated">Symbol „{0}” nie jest częścią zadeklarowanego interfejsu API.</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiTitle">
        <source>Add public types and members to the declared API</source>
        <target state="translated">Dodaj publiczne typy i składowe do zadeklarowanego interfejsu API</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesMessage">
        <source>The symbol '{0}' appears more than once in the public API files.</source>
        <target state="translated">Symbol „{0}” występuje więcej niż raz w plikach publicznego interfejsu API.</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesTitle">
        <source>Do not duplicate symbols in public API files</source>
        <target state="translated">Nie duplikuj symboli w plikach publicznego interfejsu API</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeMessage">
        <source>Constructor makes its noninheritable base class inheritable, thereby exposing its protected members.</source>
        <target state="translated">Konstruktor umożliwia dziedziczenie klasy podstawowej nieprzeznaczonej do dziedziczenia, tym samym ujawniając jej chronione składowe.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeTitle">
        <source>Constructor make noninheritable base class inheritable</source>
        <target state="translated">Konstruktor umożliwia dziedziczenie klasy podstawowej nieprzeznaczonej do dziedziczenia</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Public API with optional parameter(s) should have the most parameters amongst its public overloads'. See '{1}' for details.</source>
        <target state="translated">Symbol „{0}” narusza wymaganie wstecznej zgodności: „Publiczny interfejs API z opcjonalnymi parametrami powinien mieć najwięcej parametrów spośród przeciążeń publicznych”. Zobacz „{1}”, aby uzyskać szczegółowe informacje.</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersTitle">
        <source>Public API with optional parameter(s) should have the most parameters amongst its public overloads.</source>
        <target state="translated">Publiczny interfejs API z opcjonalnymi parametrami powinien mieć najwięcej parametrów spośród przeciążeń publicznych.</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidMessage">
        <source>The contents of the public API files are invalid: {0}</source>
        <target state="translated">Zawartość plików publicznego interfejsu API jest nieprawidłowa: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidTitle">
        <source>The contents of the public API files are invalid</source>
        <target state="translated">Zawartość plików publicznego interfejsu API jest nieprawidłowa</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingMessage">
        <source>The solution must contain two files with the type "AdditionalFiles": PublicAPI.Unshipped.txt and PublicAPI.Shipped.txt. At least one of these files is missing or has the wrong type.</source>
        <target state="translated">Rozwiązanie musi zawierać dwa pliki typu „AdditionalFiles”: PublicAPI.Unshipped.txt i PublicAPI.Shipped.txt. Brakuje co najmniej jednego z tych plików lub ma on nieprawidłowy typ.</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingTitle">
        <source>One or both of the public API files are missing</source>
        <target state="translated">Brakuje co najmniej jednego pliku publicznego interfejsu API</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitConstructorErrorMessageName">
        <source>implicit constructor for {0}</source>
        <target state="translated">niejawny konstruktor dla {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitGetAccessor">
        <source>implicit get-accessor for {0}</source>
        <target state="translated">niejawna metoda dostępu get dla elementu {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitSetAccessor">
        <source>implicit set-accessor for {0}</source>
        <target state="translated">niejawna metoda dostępu set dla elementu {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiDescription">
        <source>When removing a public type or member the corresponding entry in PublicAPI.txt should also be removed. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">W przypadku usunięcia typu publicznego lub składowej należy usunąć również odpowiedni wpis w pliku PublicAPI.txt. To przyciąga uwagę do zmian interfejsu API w przeglądach kodu i historii kontroli źródła oraz pomaga zapobiegać zmianom powodującym nieprawidłowe działanie.</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiMessage">
        <source>Symbol '{0}' is part of the declared API, but is either not public or could not be found</source>
        <target state="translated">Symbol „{0}” jest częścią zadeklarowanego interfejsu API, ale nie jest publiczny lub nie można go odnaleźć</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiTitle">
        <source>Remove deleted types and members from the declared API</source>
        <target state="translated">Usuń usunięte typy i składowe z zadeklarowanego interfejsu API</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="zh-HANS" original="../PublicApiAnalyzerResources.resx">
    <body>
      <trans-unit id="AddAllItemsInDocumentToThePublicApiTitle">
        <source>Add all items in document '{0}' to the public API</source>
        <target state="new">Add all items in document '{0}' to the public API</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAllItemsInProjectToThePublicApiTitle">
        <source>Add all items in project '{0}' to the public API</source>
        <target state="new">Add all items in project '{0}' to the public API</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAllItemsInTheSolutionToThePublicApiTitle">
        <source>Add all items in the solution to the public API</source>
        <target state="new">Add all items in the solution to the public API</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Do not add multiple overloads with optional parameters'. See '{1}' for details.</source>
        <target state="translated">符号“{0}”违反了 backcompat 要求:“请勿添加具有可选参数的多个重载”。有关详细信息，请参阅“{1}”。</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidMultipleOverloadsWithOptionalParametersTitle">
        <source>Do not add multiple public overloads with optional parameters</source>
        <target state="translated">请勿添加具有可选参数的多个公共重载</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiDescription">
        <source>All public types and members should be declared in PublicAPI.txt. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">应在 PublicAPI.txt 中声明所有公共类型和成员。这将关注代码评审和源代码管理历史记录中的 API 更改，并有助于防止重大更改。</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiMessage">
        <source>Symbol '{0}' is not part of the declared API.</source>
        <target state="translated">符号“{0}”不是已声明 API 的一部分。</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarePublicApiTitle">
        <source>Add public types and members to the declared API</source>
        <target state="translated">向已声明 API 添加公共类型和成员</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesMessage">
        <source>The symbol '{0}' appears more than once in the public API files.</source>
        <target state="translated">符号“{0}”多次出现在公共 API 文件中。</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateSymbolsInPublicApiFilesTitle">
        <source>Do not duplicate symbols in public API files</source>
        <target state="translated">请勿在公共 API 文件中复制符号</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeMessage">
        <source>Constructor makes its noninheritable base class inheritable, thereby exposing its protected members.</source>
        <target state="translated">构造函数使其不可继承的基类变为可继承，从而暴露其受保护的成员。</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposedNoninstantiableTypeTitle">
        <source>Constructor make noninheritable base class inheritable</source>
        <target state="translated">构造函数使不可继承的基类可以继承</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersMessage">
        <source>Symbol '{0}' violates the backcompat requirement: 'Public API with optional parameter(s) should have the most parameters amongst its public overloads'. See '{1}' for details.</source>
        <target state="translated">符号“{0}”违反了 backcompat 要求:“具有可选参数的公共 API 应在其公共重载中具有最多参数”。有关详细信息，请参阅“{1}”。</target>
        <note />
      </trans-unit>
      <trans-unit id="OverloadWithOptionalParametersShouldHaveMostParametersTitle">
        <source>Public API with optional parameter(s) should have the most parameters amongst its public overloads.</source>
        <target state="translated">具有可选参数的公共 API 应在其公共重载中具有最多参数。</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidMessage">
        <source>The contents of the public API files are invalid: {0}</source>
        <target state="translated">公共 API 文件的内容无效: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesInvalidTitle">
        <source>The contents of the public API files are invalid</source>
        <target state="translated">公共 API 文件的内容无效</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingMessage">
        <source>The solution must contain two files with the type "AdditionalFiles": PublicAPI.Unshipped.txt and PublicAPI.Shipped.txt. At least one of these files is missing or has the wrong type.</source>
        <target state="translated">解决方案必须包含两个具有类型 "AdditionalFiles" 的文件(PublicAPI.Unshipped.txt 和 PublicAPI.Shipped.txt)。其中至少有一个文件缺失或类型错误。</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicApiFilesMissingTitle">
        <source>One or both of the public API files are missing</source>
        <target state="translated">缺少一个或两个公共 API 文件</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitConstructorErrorMessageName">
        <source>implicit constructor for {0}</source>
        <target state="translated">{0} 的隐式构造函数</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitGetAccessor">
        <source>implicit get-accessor for {0}</source>
        <target state="translated">{0} 的隐式 get 访问器</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicImplicitSetAccessor">
        <source>implicit set-accessor for {0}</source>
        <target state="translated">{0} 的隐式 set 访问器</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiDescription">
        <source>When removing a public type or member the corresponding entry in PublicAPI.txt should also be removed. This draws attention to API changes in the code reviews and source control history, and helps prevent breaking changes.</source>
        <target state="translated">删除公共类型或成员时还应该删除 PublicAPI.txt 中相应的项。这将关注代码评审和源代码管理历史记录中的 API 更改，并有助于防止重大更改。</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiMessage">
        <source>Symbol '{0}' is part of the declared API, but is either not public or could not be found</source>
        <target state="translated">符号“{0}”是已声明 API 的一部分，但此符号不是公共符号或无法找到</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDeletedApiTitle">
        <source>Remove deleted types and members from the declared API</source>
        <target state="translated">从已声明 API 中删除已删除的类型和成员</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
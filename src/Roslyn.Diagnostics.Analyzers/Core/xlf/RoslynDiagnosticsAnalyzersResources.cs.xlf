<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="cs" original="../RoslynDiagnosticsAnalyzersResources.resx">
    <body>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_ImplicitConstructor">
        <source>Explicitly define the importing constructor</source>
        <target state="translated">Explicitně definujte importující konstruktor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_MissingAttribute">
        <source>Add 'ImportingConstructor' attribute</source>
        <target state="translated">Přidejte atribut ImportingConstructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_NonPublicConstructor">
        <source>Make constructor public</source>
        <target state="translated">Nastavit konstruktor jako veřejný</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorDescription">
        <source>Exported parts should have [ImportingConstructor]</source>
        <target state="translated">Exportované části by měly mít [ImportingConstructor].</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorMessage">
        <source>'{0}' is MEF-exported and should have a single importing constructor of the correct form</source>
        <target state="translated">{0} se exportovalo pomocí MEF a mělo by mít jeden importující konstruktor ve správném tvaru.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorTitle">
        <source>Exported parts should have [ImportingConstructor]</source>
        <target state="translated">Exportované části by měly mít [ImportingConstructor]</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_ErrorSetToFalse">
        <source>Set ObsoleteAttribute.Error to true</source>
        <target state="translated">Nastavte ObsoleteAttribute.Error na true.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_IncorrectDescription">
        <source>Use correct ObsoleteAttribute message</source>
        <target state="translated">Použijte správnou zprávu ObsoleteAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingAttribute">
        <source>Add ObsoleteAttribute</source>
        <target state="translated">Přidejte ObsoleteAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingDescription">
        <source>Configure ObsoleteAttribute for importing constructor</source>
        <target state="translated">Nakonfigurujte ObsoleteAttribute pro importující konstruktor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingError">
        <source>Set ObsoleteAttribute.Error to true</source>
        <target state="translated">Nastavte ObsoleteAttribute.Error na true.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteDescription">
        <source>Importing constructor should be [Obsolete]</source>
        <target state="translated">Importující konstruktor by měl být [Obsolete].</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteMessage">
        <source>Importing constructor should be [Obsolete]</source>
        <target state="translated">Importující konstruktor by měl být [Obsolete].</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteTitle">
        <source>Importing constructor should be [Obsolete]</source>
        <target state="translated">Importující konstruktor by měl být [Obsolete]</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableCodeFix">
        <source>Apply PartNotDiscoverableAttribute</source>
        <target state="translated">Použijte PartNotDiscoverableAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableDescription">
        <source>Test exports should not be discoverable</source>
        <target state="translated">Testovací exportování by se neměla dát zjistit.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableMessage">
        <source>'{0}' is exported for test purposes and should be marked PartNotDiscoverable</source>
        <target state="translated">{0} se exportovalo pro účely testování a mělo by se označit jako PartNotDiscoverable.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableTitle">
        <source>Test exports should not be discoverable</source>
        <target state="translated">Testovací exportování by se neměla dát zjistit</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableTitle">
        <source>Use SpecializedCollections.EmptyEnumerable()</source>
        <target state="translated">Použijte SpecializedCollections.EmptyEnumerable().</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableDescription">
        <source>#N/A</source>
        <target state="translated">Není k dispozici</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableMessage">
        <source>Use SpecializedCollections.EmptyEnumerable()</source>
        <target state="translated">Použijte SpecializedCollections.EmptyEnumerable().</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableTitle">
        <source>Use SpecializedCollections.SingletonEnumerable()</source>
        <target state="translated">Použijte SpecializedCollections.SingletonEnumerable().</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableDescription">
        <source>#N/A</source>
        <target state="translated">Není k dispozici</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableMessage">
        <source>Use SpecializedCollections.SingletonEnumerable()</source>
        <target state="translated">Použijte SpecializedCollections.SingletonEnumerable().</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsTitle">
        <source>Invoke the correct property to ensure correct use site diagnostics.</source>
        <target state="translated">Vyvoláním správné vlastnosti zajistěte správné použití diagnostiky webu.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsDescription">
        <source>#N/A</source>
        <target state="translated">Není k dispozici</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsMessage">
        <source>Invoke the correct property to ensure correct use site diagnostics.</source>
        <target state="translated">Vyvoláním správné vlastnosti zajistěte správné použití diagnostiky webu.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionTitle">
        <source>Do not use generic CodeAction.Create to create CodeAction</source>
        <target state="translated">K vytvoření CodeAction nepoužívejte obecnou metodu CodeAction.Create.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionDescription">
        <source>#N/A</source>
        <target state="translated">Není k dispozici</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionMessage">
        <source>Do not use generic CodeAction.Create to create CodeAction</source>
        <target state="translated">K vytvoření CodeAction nepoužívejte obecnou metodu CodeAction.Create.</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableTitle">
        <source>Override Object.Equals(object) when implementing Iequatable</source>
        <target state="translated">Při implementaci Iequatable přepište Object.Equals(object).</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableDescription">
        <source>#N/A</source>
        <target state="translated">Není k dispozici</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableMessage">
        <source>Override Object.Equals(object) when implementing Iequatable</source>
        <target state="translated">Při implementaci Iequatable přepište Object.Equals(object).</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorTitle">
        <source>Do not invoke Diagnostic.Descriptor</source>
        <target state="translated">Nevyvolávejte Diagnostic.Descriptor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorDescription">
        <source>Accessing the Descriptor property of Diagnostic in compiler layer leads to unnecessary string allocations for fields of the descriptor that are not utilized in command line compilation. Hence, you should avoid accessing the Descriptor of the compiler diagnostics here. Instead you should directly access these properties off the Diagnostic type.</source>
        <target state="translated">Přístup k vlastnosti Descriptor typu Diagnostic ve vrstvě kompilátoru způsobuje nepotřebné alokace řetězců pro pole popisovače, která se během kompilace na příkazovém řádku nevyužívají. Z tohoto důvodu byste se zde měli vyhnout přístupu k vlastnosti Descriptor. K těmto vlastnostem byste měli místo toho přistupovat přímo z typu Diagnostic.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorMessage">
        <source>Do not invoke property '{0}' on type '{1}', instead directly access the required member{2} on '{1}'</source>
        <target state="translated">Nevyvolávejte vlastnost {0} u typu {1}, místo toho přistupujte přímo k požadovanému členovi {2} u {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsTitle">
        <source>SymbolDeclaredEvent must be generated for source symbols</source>
        <target state="translated">Pro zdrojové symboly musí být vygenerována událost SymbolDeclaredEvent.</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsDescription">
        <source>Compilation event queue is required to generate symbol declared events for all declared source symbols. Hence, every source symbol type or one of its base types must generate a symbol declared event.</source>
        <target state="translated">Vyžaduje se, aby fronta událostí kompilace vygenerovala symbolem deklarované události pro všechny deklarované zdrojové symboly. Každý typ zdrojového symbolu nebo jeden z jeho základních typů proto musí vygenerovat symbolem deklarovanou událost.</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsMessage">
        <source>SymbolDeclaredEvent must be generated for source symbols</source>
        <target state="translated">Pro zdrojové symboly musí být vygenerována událost SymbolDeclaredEvent.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFTitle">
        <source>Do not mix attributes from different versions of MEF</source>
        <target state="translated">Nekombinujte atributy z různých verzí rozhraní MEF.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFDescription">
        <source>Do not mix attributes from different versions of MEF</source>
        <target state="translated">Nekombinujte atributy z různých verzí rozhraní MEF.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFMessage">
        <source>Attribute '{0}' comes from a different version of MEF than the export attribute on '{1}'</source>
        <target state="translated">Atribut {0} pochází z jiné verze rozhraní MEF než atribut exportu u {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedTitle">
        <source>Parts exported with MEFv2 must be marked as Shared</source>
        <target state="translated">Části exportované pomocí rozhraní MEFv2 musí být označené jako sdílené.</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedDescription">
        <source>Part exported with MEFv2 must be marked with the Shared attribute.</source>
        <target state="translated">Část exportovaná pomocí rozhraní MEFv2 musí být označená atributem Shared.</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedMessage">
        <source>'{0}' is exported with MEFv2 and hence must be marked as Shared</source>
        <target state="translated">Část {0} je exportovaná pomocí rozhraní MEFv2 a musí být proto označená jako sdílená.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ja" original="../RoslynDiagnosticsAnalyzersResources.resx">
    <body>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_ImplicitConstructor">
        <source>Explicitly define the importing constructor</source>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_MissingAttribute">
        <source>Add 'ImportingConstructor' attribute</source>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_NonPublicConstructor">
        <source>Make constructor public</source>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorDescription">
        <source>Exported parts should have [ImportingConstructor]</source>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorMessage">
        <source>'{0}' is MEF-exported and should have a single importing constructor of the correct form</source>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorTitle">
        <source>Exported parts should have [ImportingConstructor]</source>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_ErrorSetToFalse">
        <source>Set ObsoleteAttribute.Error to true</source>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_IncorrectDescription">
        <source>Use correct ObsoleteAttribute message</source>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingAttribute">
        <source>Add ObsoleteAttribute</source>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingDescription">
        <source>Configure ObsoleteAttribute for importing constructor</source>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingError">
        <source>Set ObsoleteAttribute.Error to true</source>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteDescription">
        <source>Importing constructor should be [Obsolete]</source>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteMessage">
        <source>Importing constructor should be [Obsolete]</source>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteTitle">
        <source>Importing constructor should be [Obsolete]</source>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldHaveAllMembersDescription">
        <source>Linked enumeration should have all members</source>
        <target state="new">Linked enumeration should have all members</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldHaveAllMembersFix">
        <source>Synchronize missing members</source>
        <target state="new">Synchronize missing members</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldHaveAllMembersMessage">
        <source>Linked enumeration should have all members</source>
        <target state="new">Linked enumeration should have all members</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldHaveAllMembersTitle">
        <source>Linked enumeration should have all members</source>
        <target state="new">Linked enumeration should have all members</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldMatchNameDescription">
        <source>Linked enumeration member should be present in the source enumeration</source>
        <target state="new">Linked enumeration member should be present in the source enumeration</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldMatchNameFix">
        <source>Synchronize name</source>
        <target state="new">Synchronize name</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldMatchNameMessage">
        <source>Linked enumeration member should be present in the source enumeration</source>
        <target state="new">Linked enumeration member should be present in the source enumeration</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldMatchNameTitle">
        <source>Linked enumeration member should be present in the source enumeration</source>
        <target state="new">Linked enumeration member should be present in the source enumeration</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldMatchValueDescription">
        <source>Linked enumeration member should match the value of the source enumeration member</source>
        <target state="new">Linked enumeration member should match the value of the source enumeration member</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldMatchValueFix">
        <source>Synchronize value</source>
        <target state="new">Synchronize value</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldMatchValueMessage">
        <source>Linked enumeration member should match the value of the source enumeration member</source>
        <target state="new">Linked enumeration member should match the value of the source enumeration member</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkedEnumerationShouldMatchValueTitle">
        <source>Linked enumeration member should match the value of the source enumeration member</source>
        <target state="new">Linked enumeration member should match the value of the source enumeration member</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableCodeFix">
        <source>Apply PartNotDiscoverableAttribute</source>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableDescription">
        <source>Test exports should not be discoverable</source>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableMessage">
        <source>'{0}' is exported for test purposes and should be marked PartNotDiscoverable</source>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableTitle">
        <source>Test exports should not be discoverable</source>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableTitle">
        <source>Use SpecializedCollections.EmptyEnumerable()</source>
        <target state="translated">SpecializedCollections.EmptyEnumerable() を使用します</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableDescription">
        <source>#N/A</source>
        <target state="translated">#N/A</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableMessage">
        <source>Use SpecializedCollections.EmptyEnumerable()</source>
        <target state="translated">SpecializedCollections.EmptyEnumerable() を使用します</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableTitle">
        <source>Use SpecializedCollections.SingletonEnumerable()</source>
        <target state="translated">SpecializedCollections.SingletonEnumerable() を使用します</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableDescription">
        <source>#N/A</source>
        <target state="translated">#N/A</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableMessage">
        <source>Use SpecializedCollections.SingletonEnumerable()</source>
        <target state="translated">SpecializedCollections.SingletonEnumerable() を使用します</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsTitle">
        <source>Invoke the correct property to ensure correct use site diagnostics.</source>
        <target state="translated">正しいサイト診断が使用されるように、正しいプロパティを呼び出します。</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsDescription">
        <source>#N/A</source>
        <target state="translated">#N/A</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsMessage">
        <source>Invoke the correct property to ensure correct use site diagnostics.</source>
        <target state="translated">正しいサイト診断が使用されるように、正しいプロパティを呼び出します。</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionTitle">
        <source>Do not use generic CodeAction.Create to create CodeAction</source>
        <target state="translated">CodeAction を作成するために、ジェネリック CodeAction.Create を使用しないでください</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionDescription">
        <source>#N/A</source>
        <target state="translated">#N/A</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionMessage">
        <source>Do not use generic CodeAction.Create to create CodeAction</source>
        <target state="translated">CodeAction を作成するために、ジェネリック CodeAction.Create を使用しないでください</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableTitle">
        <source>Override Object.Equals(object) when implementing Iequatable</source>
        <target state="translated">Iequatable を実装するときに Object.Equals(object) をオーバーライドします</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableDescription">
        <source>#N/A</source>
        <target state="translated">#N/A</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableMessage">
        <source>Override Object.Equals(object) when implementing Iequatable</source>
        <target state="translated">Iequatable を実装するときに Object.Equals(object) をオーバーライドします</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorTitle">
        <source>Do not invoke Diagnostic.Descriptor</source>
        <target state="translated">Diagnostic.Descriptor を呼び出さないでください</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorDescription">
        <source>Accessing the Descriptor property of Diagnostic in compiler layer leads to unnecessary string allocations for fields of the descriptor that are not utilized in command line compilation. Hence, you should avoid accessing the Descriptor of the compiler diagnostics here. Instead you should directly access these properties off the Diagnostic type.</source>
        <target state="translated">コンパイラ レイヤーで診断の Descriptor プロパティにアクセスすると、コマンド ライン コンパイルでは使用されない、記述子のフィールドに不要な文字列が割り当てられます。そのため、ここではコンパイラ診断の Descriptor にアクセスしないようにする必要があります。代わりに、Diagnostic 型のこれらのプロパティに直接アクセスする必要があります。</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorMessage">
        <source>Do not invoke property '{0}' on type '{1}', instead directly access the required member{2} on '{1}'</source>
        <target state="translated">型 '{1}' のプロパティ '{0}' を呼び出さないでください。代わりに、'{1}' の必要なメンバー {2} に直接アクセスしてください</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsTitle">
        <source>SymbolDeclaredEvent must be generated for source symbols</source>
        <target state="translated">ソース シンボルに対して SymbolDeclaredEvent を生成する必要があります</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsDescription">
        <source>Compilation event queue is required to generate symbol declared events for all declared source symbols. Hence, every source symbol type or one of its base types must generate a symbol declared event.</source>
        <target state="translated">すべての宣言済みソース シンボルのシンボル宣言イベントを生成するには、コンパイル イベント キューが必要です。そのため、各ソース シンボル型、またはその基本型の 1 つは、シンボル宣言イベントを生成する必要があります。</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsMessage">
        <source>SymbolDeclaredEvent must be generated for source symbols</source>
        <target state="translated">ソース シンボルに対して SymbolDeclaredEvent を生成する必要があります</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFTitle">
        <source>Do not mix attributes from different versions of MEF</source>
        <target state="translated">複数のバージョンの MEF の属性を混用しないでください</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFDescription">
        <source>Do not mix attributes from different versions of MEF</source>
        <target state="translated">複数のバージョンの MEF の属性を混用しないでください</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFMessage">
        <source>Attribute '{0}' comes from a different version of MEF than the export attribute on '{1}'</source>
        <target state="translated">属性 '{0}' は、'{1}' のエクスポート属性とは別のバージョンの MEF の属性です</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedTitle">
        <source>Parts exported with MEFv2 must be marked as Shared</source>
        <target state="translated">MEFv2 でエクスポートされたパーツは、共有としてマークする必要があります</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedDescription">
        <source>Part exported with MEFv2 must be marked with the Shared attribute.</source>
        <target state="translated">MEFv2 でエクスポートされたパーツは、共有属性でマークする必要があります。</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedMessage">
        <source>'{0}' is exported with MEFv2 and hence must be marked as Shared</source>
        <target state="translated">'{0}' は MEFv2 でエクスポートされるため、共有としてマークする必要があります</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
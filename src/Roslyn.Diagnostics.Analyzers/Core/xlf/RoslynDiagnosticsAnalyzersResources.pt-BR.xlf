<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pt-BR" original="../RoslynDiagnosticsAnalyzersResources.resx">
    <body>
      <trans-unit id="CreateTestAccessorDescription">
        <source>This is a refactoring which simplifies the process of creating test accessors using the TestAccessor pattern</source>
        <target state="new">This is a refactoring which simplifies the process of creating test accessors using the TestAccessor pattern</target>
        <note />
      </trans-unit>
      <trans-unit id="CreateTestAccessorMessage">
        <source>Create test accessor</source>
        <target state="new">Create test accessor</target>
        <note />
      </trans-unit>
      <trans-unit id="CreateTestAccessorTitle">
        <source>Create test accessor</source>
        <target state="new">Create test accessor</target>
        <note />
      </trans-unit>
      <trans-unit id="DefaultableTypeShouldHaveDefaultableFieldsDescription">
        <source>Defaultable types should have defaultable fields</source>
        <target state="translated">Os tipos usados como padrão devem ter campos usados como padrão</target>
        <note />
      </trans-unit>
      <trans-unit id="DefaultableTypeShouldHaveDefaultableFieldsMessage">
        <source>Defaultable type '{0}' has a non-defaultable field or auto-property '{1}'</source>
        <target state="translated">O tipo usado como padrão '{0}' tem um campo não usado como padrão ou a propriedade automática '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="DefaultableTypeShouldHaveDefaultableFieldsTitle">
        <source>Defaultable types should have defaultable fields</source>
        <target state="translated">Os tipos usados como padrão devem ter campos usados como padrão</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCallGetTestAccessorDescription">
        <source>GetTestAccessor() is a helper method reserved for testing. Production code must not call this member.</source>
        <target state="new">GetTestAccessor() is a helper method reserved for testing. Production code must not call this member.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCallGetTestAccessorMessage">
        <source>Do not call GetTestAccessor() from production code</source>
        <target state="new">Do not call GetTestAccessor() from production code</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCallGetTestAccessorTitle">
        <source>Do not call GetTestAccessor()</source>
        <target state="new">Do not call GetTestAccessor()</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueAvoidNullableWrapperDescription">
        <source>Avoid nullable wrapper</source>
        <target state="new">Avoid nullable wrapper</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueAvoidNullableWrapperMessage">
        <source>Do not wrap non-copyable type '{0}' in '{1}' operation</source>
        <target state="new">Do not wrap non-copyable type '{0}' in '{1}' operation</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueDescription">
        <source>Do not copy value</source>
        <target state="new">Do not copy value</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueMessage">
        <source>Do not copy value</source>
        <target state="new">Do not copy value</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueNoBoxingDescription">
        <source>Do not box non-copyable value types.</source>
        <target state="new">Do not box non-copyable value types.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueNoBoxingMessage">
        <source>Do not box non-copyable type '{0}'</source>
        <target state="new">Do not box non-copyable type '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueNoUnboxingDescription">
        <source>Do not unbox non-copyable value types.</source>
        <target state="new">Do not unbox non-copyable value types.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueNoUnboxingMessage">
        <source>Do not unbox non-copyable type '{0}'</source>
        <target state="new">Do not unbox non-copyable type '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueTitle">
        <source>Do not copy value</source>
        <target state="new">Do not copy value</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueUnsupportedUseDescription">
        <source>Unsupported use of non-copyable type</source>
        <target state="new">Unsupported use of non-copyable type</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotCopyValueUnsupportedUseMessage">
        <source>Unsupported use of non-copyable type '{0}' in '{1}' operation</source>
        <target state="new">Unsupported use of non-copyable type '{0}' in '{1}' operation</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_ImplicitConstructor">
        <source>Explicitly define the importing constructor</source>
        <target state="translated">Definir explicitamente o construtor de importação</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_MissingAttribute">
        <source>Add 'ImportingConstructor' attribute</source>
        <target state="translated">Adicionar atributo 'ImportingConstructor'</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_NonPublicConstructor">
        <source>Make constructor public</source>
        <target state="translated">Tornar o construtor público</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorDescription">
        <source>Exported parts should have [ImportingConstructor]</source>
        <target state="translated">As partes exportadas devem ter [ImportingConstructor]</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorMessage">
        <source>'{0}' is MEF-exported and should have a single importing constructor of the correct form</source>
        <target state="translated">'{0}' é exportado pelo MEF e deve ter um construtor de importação única do formato correto</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorTitle">
        <source>Exported parts should have [ImportingConstructor]</source>
        <target state="translated">As partes exportadas devem ter [ImportingConstructor]</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposeMemberForTestingDescription">
        <source>Expose member for testing</source>
        <target state="new">Expose member for testing</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposeMemberForTestingMessage">
        <source>Expose member for testing</source>
        <target state="new">Expose member for testing</target>
        <note />
      </trans-unit>
      <trans-unit id="ExposeMemberForTestingTitle">
        <source>Expose member for testing</source>
        <target state="new">Expose member for testing</target>
        <note />
      </trans-unit>
      <trans-unit id="FixNumberedComments">
        <source>Fix numbered comments</source>
        <target state="translated">Corrigir comentários numerados</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_ErrorSetToFalse">
        <source>Set ObsoleteAttribute.Error to true</source>
        <target state="translated">Definir ObsoleteAttribute.Error como true</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_IncorrectDescription">
        <source>Use correct ObsoleteAttribute message</source>
        <target state="translated">Usar a mensagem de ObsoleteAttribute correta</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingAttribute">
        <source>Add ObsoleteAttribute</source>
        <target state="translated">Adicionar ObsoleteAttribute</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingDescription">
        <source>Configure ObsoleteAttribute for importing constructor</source>
        <target state="translated">Configurar ObsoleteAttribute para o construtor de importação</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingError">
        <source>Set ObsoleteAttribute.Error to true</source>
        <target state="translated">Definir ObsoleteAttribute.Error como true</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteDescription">
        <source>Importing constructor should be [Obsolete]</source>
        <target state="translated">O construtor de importação deve ser [Obsolete]</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteMessage">
        <source>Importing constructor should be [Obsolete]</source>
        <target state="translated">O construtor de importação deve ser [Obsolete]</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteTitle">
        <source>Importing constructor should be [Obsolete]</source>
        <target state="translated">O construtor de importação deve ser [Obsolete]</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferNullLiteralCodeFix">
        <source>Use 'null' instead of 'default'</source>
        <target state="translated">Use 'null' em vez de 'default'</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferNullLiteralDescription">
        <source>Use 'null' instead of 'default' for nullable types.</source>
        <target state="needs-review-translation">Use 'null' em vez de 'default' para tipos de referência.</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferNullLiteralMessage">
        <source>Use 'null' instead of 'default' for nullable types</source>
        <target state="needs-review-translation">Use 'null' em vez de 'default' para tipos de referência</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferNullLiteralTitle">
        <source>Prefer null literal</source>
        <target state="translated">Preferir literal nulo</target>
        <note />
      </trans-unit>
      <trans-unit id="RelaxTestNamingSuppressorJustification">
        <source>Asynchronous test methods do not require the 'Async' suffix.</source>
        <target state="translated">Os métodos de teste assíncronos não exigem o sufixo 'Async'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableCodeFix">
        <source>Apply PartNotDiscoverableAttribute</source>
        <target state="translated">Aplicar PartNotDiscoverableAttribute</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableDescription">
        <source>Test exports should not be discoverable</source>
        <target state="translated">As exportações de teste não devem ser detectáveis</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableMessage">
        <source>'{0}' is exported for test purposes and should be marked PartNotDiscoverable</source>
        <target state="translated">'{0}' é exportado para fins de teste e deve ser marcado como PartNotDiscoverable</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableTitle">
        <source>Test exports should not be discoverable</source>
        <target state="translated">As exportações de teste não devem ser detectáveis</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableTitle">
        <source>Use SpecializedCollections.EmptyEnumerable()</source>
        <target state="translated">Usar SpecializedCollections.EmptyEnumerable()</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableDescription">
        <source>#N/A</source>
        <target state="translated">#N/D</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableMessage">
        <source>Use SpecializedCollections.EmptyEnumerable()</source>
        <target state="translated">Usar SpecializedCollections.EmptyEnumerable()</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableTitle">
        <source>Use SpecializedCollections.SingletonEnumerable()</source>
        <target state="translated">Usar SpecializedCollections.SingletonEnumerable()</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableDescription">
        <source>#N/A</source>
        <target state="translated">#N/D</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableMessage">
        <source>Use SpecializedCollections.SingletonEnumerable()</source>
        <target state="translated">Usar SpecializedCollections.SingletonEnumerable()</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsTitle">
        <source>Invoke the correct property to ensure correct use site diagnostics.</source>
        <target state="translated">Invoque a propriedade correta para assegurar o uso correto de diagnósticos do site.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsDescription">
        <source>#N/A</source>
        <target state="translated">#N/D</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsMessage">
        <source>Invoke the correct property to ensure correct use site diagnostics.</source>
        <target state="translated">Invoque a propriedade correta para assegurar o uso correto de diagnósticos do site.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionTitle">
        <source>Do not use generic CodeAction.Create to create CodeAction</source>
        <target state="translated">Não usar CodeAction.Create genérico para criar CodeAction</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionDescription">
        <source>#N/A</source>
        <target state="translated">#N/D</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionMessage">
        <source>Do not use generic CodeAction.Create to create CodeAction</source>
        <target state="translated">Não usar CodeAction.Create genérico para criar CodeAction</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableTitle">
        <source>Override Object.Equals(object) when implementing Iequatable</source>
        <target state="translated">Substituir Object.Equals(object) ao implementar Iequatable</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableDescription">
        <source>#N/A</source>
        <target state="translated">#N/D</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableMessage">
        <source>Override Object.Equals(object) when implementing Iequatable</source>
        <target state="translated">Substituir Object.Equals(object) ao implementar Iequatable</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorTitle">
        <source>Do not invoke Diagnostic.Descriptor</source>
        <target state="translated">Não invocar Diagnostic.Descriptor</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorDescription">
        <source>Accessing the Descriptor property of Diagnostic in compiler layer leads to unnecessary string allocations for fields of the descriptor that are not utilized in command line compilation. Hence, you should avoid accessing the Descriptor of the compiler diagnostics here. Instead you should directly access these properties off the Diagnostic type.</source>
        <target state="translated">Acessar a propriedade Descriptor de Diagnostic na camada do compilador leva a alocações de cadeia de caracteres desnecessárias para campos do descritor não utilizados na compilação da linha de comando. Portanto, você deve evitar acessar o Descritor do diagnóstico do compilador aqui. Em vez disso, você deve acessar diretamente essas propriedades do tipo de Diagnostic.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorMessage">
        <source>Do not invoke property '{0}' on type '{1}', instead directly access the required member{2} on '{1}'</source>
        <target state="translated">Não invoque a propriedade '{0}' no tipo '{1}', em vez de acessar diretamente o membro {2} necessário no '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsTitle">
        <source>SymbolDeclaredEvent must be generated for source symbols</source>
        <target state="translated">SymbolDeclaredEvent deve ser gerado para símbolos de origem</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsDescription">
        <source>Compilation event queue is required to generate symbol declared events for all declared source symbols. Hence, every source symbol type or one of its base types must generate a symbol declared event.</source>
        <target state="translated">A fila de eventos de compilação deve gerar eventos declarados por símbolo para todos os símbolos de origem declarados. Portanto, cada tipo de símbolo de origem ou um de seus tipos base deve gerar um evento declarado por símbolo.</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsMessage">
        <source>SymbolDeclaredEvent must be generated for source symbols</source>
        <target state="translated">SymbolDeclaredEvent deve ser gerado para símbolos de origem</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFTitle">
        <source>Do not mix attributes from different versions of MEF</source>
        <target state="translated">Não combinar atributos de versões diferentes de MEF</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFDescription">
        <source>Do not mix attributes from different versions of MEF</source>
        <target state="translated">Não combinar atributos de versões diferentes de MEF</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFMessage">
        <source>Attribute '{0}' comes from a different version of MEF than the export attribute on '{1}'</source>
        <target state="translated">O atributo '{0}' vem de uma versão diferente de MEF do que o atributo de exportação em '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedTitle">
        <source>Parts exported with MEFv2 must be marked as Shared</source>
        <target state="translated">As partes exportadas com MEFv2 devem ser marcadas como Shared</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedDescription">
        <source>Part exported with MEFv2 must be marked with the Shared attribute.</source>
        <target state="translated">A parte exportada com MEFv2 deve ser marcada com o atributo Shared.</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedMessage">
        <source>'{0}' is exported with MEFv2 and hence must be marked as Shared</source>
        <target state="translated">'{0}' é exportado com MEFv2 e, portanto, deve ser marcado com Shared</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
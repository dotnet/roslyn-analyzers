<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pt-BR" original="../RoslynDiagnosticsAnalyzersResources.resx">
    <body>
      <trans-unit id="CodeMayHaveMainThreadDependencyCodeFix_ContainingMethodShouldBePerInstance">
        <source>Mark containing method as PerInstance</source>
        <target state="new">Mark containing method as PerInstance</target>
        <note />
      </trans-unit>
      <trans-unit id="CodeMayHaveMainThreadDependencyCodeFix_ContainingMethodShouldCaptureContext">
        <source>Mark containing method as ContextDependency.Context</source>
        <target state="new">Mark containing method as ContextDependency.Context</target>
        <note />
      </trans-unit>
      <trans-unit id="CodeMayHaveMainThreadDependencyCodeFix_TargetMissingAttribute">
        <source>Mark target with [ThreadDependency]</source>
        <target state="new">Mark target with [ThreadDependency]</target>
        <note />
      </trans-unit>
      <trans-unit id="CodeMayHaveMainThreadDependencyDescription">
        <source>Code may have main thread dependency</source>
        <target state="new">Code may have main thread dependency</target>
        <note />
      </trans-unit>
      <trans-unit id="CodeMayHaveMainThreadDependencyMessage">
        <source>Code may have main thread dependency</source>
        <target state="new">Code may have main thread dependency</target>
        <note />
      </trans-unit>
      <trans-unit id="CodeMayHaveMainThreadDependencyTitle">
        <source>Code may have main thread dependency</source>
        <target state="new">Code may have main thread dependency</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_ImplicitConstructor">
        <source>Explicitly define the importing constructor</source>
        <target state="new">Explicitly define the importing constructor</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_MissingAttribute">
        <source>Add 'ImportingConstructor' attribute</source>
        <target state="new">Add 'ImportingConstructor' attribute</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorCodeFix_NonPublicConstructor">
        <source>Make constructor public</source>
        <target state="new">Make constructor public</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorDescription">
        <source>Exported parts should have [ImportingConstructor]</source>
        <target state="new">Exported parts should have [ImportingConstructor]</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorMessage">
        <source>'{0}' is MEF-exported and should have a single importing constructor of the correct form</source>
        <target state="new">'{0}' is MEF-exported and should have a single importing constructor of the correct form</target>
        <note />
      </trans-unit>
      <trans-unit id="ExportedPartsShouldHaveImportingConstructorTitle">
        <source>Exported parts should have [ImportingConstructor]</source>
        <target state="new">Exported parts should have [ImportingConstructor]</target>
        <note />
      </trans-unit>
      <trans-unit id="ImplementWithNoMainThreadDependencyDescription">
        <source>Implement with no main thread dependency</source>
        <target state="new">Implement with no main thread dependency</target>
        <note />
      </trans-unit>
      <trans-unit id="ImplementWithNoMainThreadDependencyMessage">
        <source>Implement with no main thread dependency</source>
        <target state="new">Implement with no main thread dependency</target>
        <note />
      </trans-unit>
      <trans-unit id="ImplementWithNoMainThreadDependencyTitle">
        <source>Implement with no main thread dependency</source>
        <target state="new">Implement with no main thread dependency</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_ErrorSetToFalse">
        <source>Set ObsoleteAttribute.Error to true</source>
        <target state="new">Set ObsoleteAttribute.Error to true</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_IncorrectDescription">
        <source>Use correct ObsoleteAttribute message</source>
        <target state="new">Use correct ObsoleteAttribute message</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingAttribute">
        <source>Add ObsoleteAttribute</source>
        <target state="new">Add ObsoleteAttribute</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingDescription">
        <source>Configure ObsoleteAttribute for importing constructor</source>
        <target state="new">Configure ObsoleteAttribute for importing constructor</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteCodeFix_MissingError">
        <source>Set ObsoleteAttribute.Error to true</source>
        <target state="new">Set ObsoleteAttribute.Error to true</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteDescription">
        <source>Importing constructor should be [Obsolete]</source>
        <target state="new">Importing constructor should be [Obsolete]</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteMessage">
        <source>Importing constructor should be [Obsolete]</source>
        <target state="new">Importing constructor should be [Obsolete]</target>
        <note />
      </trans-unit>
      <trans-unit id="ImportingConstructorShouldBeObsoleteTitle">
        <source>Importing constructor should be [Obsolete]</source>
        <target state="new">Importing constructor should be [Obsolete]</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableCodeFix">
        <source>Apply PartNotDiscoverableAttribute</source>
        <target state="new">Apply PartNotDiscoverableAttribute</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableDescription">
        <source>Test exports should not be discoverable</source>
        <target state="new">Test exports should not be discoverable</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableMessage">
        <source>'{0}' is exported for test purposes and should be marked PartNotDiscoverable</source>
        <target state="new">'{0}' is exported for test purposes and should be marked PartNotDiscoverable</target>
        <note />
      </trans-unit>
      <trans-unit id="TestExportsShouldNotBeDiscoverableTitle">
        <source>Test exports should not be discoverable</source>
        <target state="new">Test exports should not be discoverable</target>
        <note />
      </trans-unit>
      <trans-unit id="MainThreadDependencyShouldBeVerifiedDescription">
        <source>Main thread dependency should be verified</source>
        <target state="new">Main thread dependency should be verified</target>
        <note />
      </trans-unit>
      <trans-unit id="MainThreadDependencyShouldBeVerifiedFix">
        <source>Verify main thread dependency</source>
        <target state="new">Verify main thread dependency</target>
        <note />
      </trans-unit>
      <trans-unit id="MainThreadDependencyShouldBeVerifiedMessage">
        <source>Main thread dependency should be verified</source>
        <target state="new">Main thread dependency should be verified</target>
        <note />
      </trans-unit>
      <trans-unit id="MainThreadDependencyShouldBeVerifiedTitle">
        <source>Main thread dependency should be verified</source>
        <target state="new">Main thread dependency should be verified</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableTitle">
        <source>Use SpecializedCollections.EmptyEnumerable()</source>
        <target state="translated">Usar SpecializedCollections.EmptyEnumerable()</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableDescription">
        <source>#N/A</source>
        <target state="translated">#N/D</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsEmptyEnumerableMessage">
        <source>Use SpecializedCollections.EmptyEnumerable()</source>
        <target state="translated">Usar SpecializedCollections.EmptyEnumerable()</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableTitle">
        <source>Use SpecializedCollections.SingletonEnumerable()</source>
        <target state="translated">Usar SpecializedCollections.SingletonEnumerable()</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableDescription">
        <source>#N/A</source>
        <target state="translated">#N/D</target>
        <note />
      </trans-unit>
      <trans-unit id="UseSpecializedCollectionsSingletonEnumerableMessage">
        <source>Use SpecializedCollections.SingletonEnumerable()</source>
        <target state="translated">Usar SpecializedCollections.SingletonEnumerable()</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsTitle">
        <source>Invoke the correct property to ensure correct use site diagnostics.</source>
        <target state="translated">Invoque a propriedade correta para assegurar o uso correto de diagnósticos do site.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsDescription">
        <source>#N/A</source>
        <target state="translated">#N/D</target>
        <note />
      </trans-unit>
      <trans-unit id="InvokeTheCorrectPropertyToEnsureCorrectUseSiteDiagnosticsMessage">
        <source>Invoke the correct property to ensure correct use site diagnostics.</source>
        <target state="translated">Invoque a propriedade correta para assegurar o uso correto de diagnósticos do site.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionTitle">
        <source>Do not use generic CodeAction.Create to create CodeAction</source>
        <target state="translated">Não usar CodeAction.Create genérico para criar CodeAction</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionDescription">
        <source>#N/A</source>
        <target state="translated">#N/D</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotUseGenericCodeActionCreateToCreateCodeActionMessage">
        <source>Do not use generic CodeAction.Create to create CodeAction</source>
        <target state="translated">Não usar CodeAction.Create genérico para criar CodeAction</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableTitle">
        <source>Override Object.Equals(object) when implementing Iequatable</source>
        <target state="translated">Substituir Object.Equals(object) ao implementar Iequatable</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableDescription">
        <source>#N/A</source>
        <target state="translated">#N/D</target>
        <note />
      </trans-unit>
      <trans-unit id="OverrideObjectEqualsObjectWhenImplementingIequatableMessage">
        <source>Override Object.Equals(object) when implementing Iequatable</source>
        <target state="translated">Substituir Object.Equals(object) ao implementar Iequatable</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorTitle">
        <source>Do not invoke Diagnostic.Descriptor</source>
        <target state="translated">Não invocar Diagnostic.Descriptor</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorDescription">
        <source>Accessing the Descriptor property of Diagnostic in compiler layer leads to unnecessary string allocations for fields of the descriptor that are not utilized in command line compilation. Hence, you should avoid accessing the Descriptor of the compiler diagnostics here. Instead you should directly access these properties off the Diagnostic type.</source>
        <target state="translated">Acessar a propriedade Descriptor de Diagnostic na camada do compilador leva a alocações de cadeia de caracteres desnecessárias para campos do descritor não utilizados na compilação da linha de comando. Portanto, você deve evitar acessar o Descritor do diagnóstico do compilador aqui. Em vez disso, você deve acessar diretamente essas propriedades do tipo de Diagnostic.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotInvokeDiagnosticDescriptorMessage">
        <source>Do not invoke property '{0}' on type '{1}', instead directly access the required member{2} on '{1}'</source>
        <target state="translated">Não invoque a propriedade '{0}' no tipo '{1}', em vez de acessar diretamente o membro {2} necessário no '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsTitle">
        <source>SymbolDeclaredEvent must be generated for source symbols</source>
        <target state="translated">SymbolDeclaredEvent deve ser gerado para símbolos de origem</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsDescription">
        <source>Compilation event queue is required to generate symbol declared events for all declared source symbols. Hence, every source symbol type or one of its base types must generate a symbol declared event.</source>
        <target state="translated">A fila de eventos de compilação deve gerar eventos declarados por símbolo para todos os símbolos de origem declarados. Portanto, cada tipo de símbolo de origem ou um de seus tipos base deve gerar um evento declarado por símbolo.</target>
        <note />
      </trans-unit>
      <trans-unit id="SymbolDeclaredEventMustBeGeneratedForSourceSymbolsMessage">
        <source>SymbolDeclaredEvent must be generated for source symbols</source>
        <target state="translated">SymbolDeclaredEvent deve ser gerado para símbolos de origem</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFTitle">
        <source>Do not mix attributes from different versions of MEF</source>
        <target state="translated">Não combinar atributos de versões diferentes de MEF</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFDescription">
        <source>Do not mix attributes from different versions of MEF</source>
        <target state="translated">Não combinar atributos de versões diferentes de MEF</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotMixAttributesFromDifferentVersionsOfMEFMessage">
        <source>Attribute '{0}' comes from a different version of MEF than the export attribute on '{1}'</source>
        <target state="translated">O atributo '{0}' vem de uma versão diferente de MEF do que o atributo de exportação em '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedTitle">
        <source>Parts exported with MEFv2 must be marked as Shared</source>
        <target state="translated">As partes exportadas com MEFv2 devem ser marcadas como Shared</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedDescription">
        <source>Part exported with MEFv2 must be marked with the Shared attribute.</source>
        <target state="translated">A parte exportada com MEFv2 deve ser marcada com o atributo Shared.</target>
        <note />
      </trans-unit>
      <trans-unit id="PartsExportedWithMEFv2MustBeMarkedAsSharedMessage">
        <source>'{0}' is exported with MEFv2 and hence must be marked as Shared</source>
        <target state="translated">'{0}' é exportado com MEFv2 e, portanto, deve ser marcado com Shared</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>
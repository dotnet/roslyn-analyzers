ID,MessageName,Message
CA1000,Default,Remove {0} from {1} or make it an instance member.
CA1001,DependsOnFix,"Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers."
CA1001,NonBreaking,Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}.
CA1002,Default,"Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;"
CA1003,VB,"Visual Basic generates EventHandler delegates for events that use the following pattern: Event MyEvent(ByVal Sender As Object, ByVal e as MyEventArgs). Change the event that defines EventHandler {0} to use EventHandler&lt;T&gt; by defining the event type explicitly, e.g. Event MyEvent As EventHandler(Of MyEventArgs)."
CA1003,Default,Remove {0} and replace its usage with EventHandler&lt;T&gt;
CA1004,Default,Consider a design where {0} doesn't require explicit type parameter {1} in any call to it.
CA1005,Default,Consider a design where {0} has no more than 2 type parameters.
CA1006,Default,Consider a design where {0} doesn't nest generic type {1}.
CA1007,Default,Consider using generics instead of a reference to System.Object in {0}.
CA1008,FlagsRename,"In enum {0}, change the name of {1} to 'None'."
CA1008,FlagsMultipleZeros,Remove all members that have the value zero from {0} except for one member that is named 'None'.
CA1008,NotFlagsNoZeroValue,Add a member to {0} that has a value of zero with a suggested name of 'None'.
CA1009,Return,Change {0} to return void.
CA1009,First,Declare the first parameter of {0} as an object named 'sender'.
CA1009,Second,"Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'."
CA1009,TooMany,Remove all but the first two parameters of {0}.
CA1010,Default,"{0} appears to be a non-generic, strongly typed collection. Add an implementation to the instance of {1}&lt;T&gt; where T is the underlying element type of {0}."
CA1011,Default,Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.
CA1012,Default,Change the accessibility of all public constructors in {0} to protected.
CA1013,Default,Consider adding an overload of the equality operator for {0} that takes the same parameters as {1}.
CA1014,Default,Mark {0} with CLSCompliant(true) because it exposes externally visible types.
CA2210,NoStrongName,Sign {0} with a strong name key.
CA2210,NotValid,Verify that {0} has a valid strong name before deploying.
CA1016,Default,Add an AssemblyVersion attribute to {0}.
CA1017,NoAttribute,"Because {0} exposes externally visible types, mark it with ComVisible(false) at the assembly level and then mark all types within the assembly that should be exposed to COM clients with ComVisible(true)."
CA1017,AttributeTrue,"Consider changing the ComVisible attribute on {0} to false, and opting in at the type level."
CA1018,Default,Specify AttributeUsage on {0}.
CA1018,Inherited,"Even though attribute {0} inherits AttributeUsage from its base type, you should consider explicitly specifying AttributeUsage on the type to improve code readability and documentation."
CA1019,Default,Add a public read-only property accessor for positional argument {0} of Attribute {1}.
CA1019,RemoveSetter,Remove the property setter from {0} or reduce its accessibility because it corresponds to positional argument {1}.
CA1019,IncreaseVisibility,"If {0} is the property accessor for positional argument {1}, make it public."
CA1020,Default,Consider merging the types defined in '{0}' with another namespace.
CA1021,Default,Consider a design that does not require that {0} be an out parameter.
CA1023,Default,Redesign indexer {0} to use a single string or integer value as its index.
CA1024,Default,Change {0} to a property if appropriate.
CA1025,Default,Consider implementing a version of {0} that accepts a parameter array argument.
CA1026,Default,Replace method {0} with an overload that supplies all default arguments.
CA1027,Default,"The constituent members of {0} appear to represent flags that can be combined rather than discrete values. If this is correct, mark the enumeration with FlagsAttribute."
CA1028,NotInt32,"If possible, make the underlying type of {0} System.Int32 instead of {1}."
CA1028,NotIntegral,"If possible, make the underlying type of {0} Int32 instead of {1}. Otherwise consider Byte, Int16, or Int64."
CA1030,Default,Consider making {0} an event.
CA1031,Default,Modify {0} to catch a more specific exception than {1} or rethrow the exception.
CA1032,MissingConstructor,Add the following constructor to {0}: {1}.
CA1032,Accessibility,Change the accessibility of {0} to {1}.
CA1033,Default,"Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes."
CA1034,Default,"Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible."
CA1034,VisualBasicModule,"Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible. If this type is defined in a Visual Basic Module, it will be considered a nested type to other .NET languages. In that case, consider moving the type outside of the Module."
CA1035,Default,{0} should provide a strongly typed implementation of ICollection.CopyTo.
CA1036,Equals,{0} should override Equals since it implements IComparable.
CA1036,Operator,{0} should define operator '{1}' since it implements IComparable.
CA1038,Default,{0} should provide a strongly typed implementation of IEnumerator.Current.
CA1039,Default,{0} should provide a strongly typed implementation of {1}.
CA1040,Default,Define a custom attribute to replace {0}.
CA1041,Default,Provide a message for the ObsoleteAttribute that marks {0}.
CA1043,Default,Use an integral value or string as the parameter to indexer {0}.
CA1044,AddGetter,"Because property {0} is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method."
CA1044,MakeMoreAccessible,"Because the property getter for {0} is less visible than its setter, either increase the accessibility of its getter or decrease the accessibility of its setter."
CA1045,Default,Consider a design that does not require that {0} be a reference parameter.
CA1046,Default,{0} should not overload the equality operator.
CA1047,Type,"Make type {0} private, public, or internal (Friend in Visual Basic)."
CA1047,Member,"Make member {0} private, public, or internal (Friend in Visual Basic)."
CA1048,Default,"'{0}' is a virtual member declared in a sealed type. Mark the member non-virtual or, if the type should be extensible, unseal it."
CA1049,Default,Implement IDisposable on {0}.
CA1050,Default,{0} should be declared inside a namespace.
CA1051,Default,"Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it."
CA1052,Default,"Because type {0} contains only 'static' ('Shared' in Visual Basic) members, mark it as 'sealed' ('NotInheritable' in Visual Basic) to prevent consumers from inheriting from it."
CA1052,CSharp2_0,"Because type {0} contains only 'static' members, mark it as 'static' to prevent consumers from inheriting from it."
CA1053,Default,"Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor."
CA1053,CSharp2_0,"Because type {0} contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor."
CA1054,Default,"Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object."
CA1055,Default,Change the return type of {0} from string to System.Uri.
CA1056,Default,Change the type of property {0} from string to System.Uri.
CA1057,Default,"Refactor {0} so that it builds a System.Uri object from {1}, and then calls {2}."
CA1058,System.Xml.XmlDocument,Change the base type of {0} so that it no longer extends {1}. The preferred design is to decouple the underlying XmlDocument representation from the type's interface by using containment instead of inheritance.
CA1058,System.ApplicationException,Change the base type of {0} so that it no longer extends {1}. This base exception type does not provide any additional value for framework classes. Extend 'System.Exception' or an existing unsealed exception type instead. Do not create a new exception base type unless there is specific value in enabling the creation of a catch handler for an entire class of exceptions.
CA1058,System.Collections.CollectionBase,Change the base type of {0} from {1} to its generic equivalent 'System.Collections.ObjectModel.Collection'.
CA1058,System.Collections.DictionaryBase,Change the base type of {0} from {1} to its generic equivalent 'System.Collections.ObjectModel.KeyedCollection'.
CA1058,System.Collections.Queue,Change the base type of {0} from {1} to its generic equivalent 'System.Collections.Generic.Queue'.
CA1058,System.Collections.ReadOnlyCollectionBase,Change the base type of {0} from {1} to its generic equivalent 'System.Collections.ObjectModel.ReadOnlyCollection'.
CA1058,System.Collections.SortedList,Change the base type of {0} from {1} to its generic equivalent 'System.Collections.Generic.SortedList'.
CA1058,System.Collections.Stack,Change the base type of {0} from {1} to its generic equivalent 'System.Collections.Generic.Stack'.
CA1059,Xml,Modify member {0} so that it no longer exposes the concrete type {1}. Use IXPathNavigable to represent XML data sources.
CA1060,Default,"Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods."
CA1061,Default,Change or remove {0} because it hides a more specific base class method: {1}.
CA1063,IDisposableReimplementation,Remove IDisposable from the list of interfaces implemented by {0} and override the base class Dispose implementation instead.
CA1063,FinalizeOverride,"Remove the finalizer from type {0}, override Dispose(bool disposing), and put the finalization logic in the code path where 'disposing' is false."
CA1063,DisposeOverride,"Remove {0}, override Dispose(bool disposing), and put the dispose logic in the code path where 'disposing' is true."
CA1063,DisposeSignature,Ensure that {0} is declared as public and sealed.
CA1063,RenameDispose,Rename {0} to 'Dispose' and ensure that it is declared as public and sealed.
CA1063,DisposeBoolSignature,"Ensure that {0} is declared as protected, virtual, and unsealed."
CA1063,DisposeImplementation,"Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns."
CA1063,FinalizeImplementation,Modify {0} so that it calls Dispose(false) and then returns.
CA1063,ProvideDisposeBool,Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.
CA1064,Default,Make exception class {0} public.
CA1065,PropertyGetter,"{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception."
CA1065,HasAllowedExceptions,"{0} creates an exception of type {1}, an exception type that should not be raised in this type of method. If this exception instance might be raised, either use a different exception type or change this method's logic so that it no longer raises an exception."
CA1065,NoAllowedExceptions,"{0} creates an exception of type {1}. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception."
CA1300,Default,"Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control."
CA1301,Default,Define unique accelerators for the following controls in {0} that all currently use &{1} as an accelerator: {2}.
CA1302,Default,"If the literal '{0}' used in method {1} refers to a special system location, replace it with a call to Environment.GetFolderPath."
CA1302,CameFromDefaultParameterValue,"In method {0}, parameter {1} on called method {2} has a default value of '{3}'. If the supplied default value refers to a special system location, replace it with a call to Environment.GetFolderPath."
CA1302,IsDefaultParameterValue,"If the default value '{0}' of parameter {1} on method {2} refers to a special system location, consider making parameter {1} a required parameter with no default value. Special system locations should be retrieved using an API such as Environment.GetFolderPath."
CA1304,Default,"Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'."
CA1305,IFormatProviderAlternateString,"Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}."
CA1305,IFormatProviderAlternate,"Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}."
CA1305,UICultureString,"{0} passes {1} as the 'IFormatProvider' parameter to {2}. This property returns a culture that is inappropriate for formatting methods. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}."
CA1305,UICulture,"{0} passes {1} as the 'IFormatProvider' parameter to {2}. This property returns a culture that is inappropriate for formatting methods. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}."
CA1306,Default,Be sure to set the {0} Locale property wherever {1} creates an instance of that type.
CA2101,Parameter,"To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true."
CA2101,Field,"To reduce security risk, marshal field {0} as Unicode, by setting StructLayout.CharSet on {1} to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, ensure ThrowOnUnmappableChar is on."
CA2101,ParameterImplicitAnsi,"To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true."
CA2101,FieldImplicitAnsi,"To reduce security risk, marshal field {0} as Unicode, by setting StructLayout.CharSet on {1} to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, to turn ThrowOnUnmappableChar on."
CA1307,Default,"Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
CA1308,ToUpperInvariant,"In method {0}, replace the call to {1} with String.ToUpperInvariant()."
CA1308,ToUpper,"In method {0}, replace the call to String.ToLower(CultureInfo.InvariantCulture) with String.ToUpper(CultureInfo.InvariantCulture)."
CA1309,StringComparison,"{0} passes '{1}' as the 'StringComparison' parameter to {2}. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead."
CA1309,StringComparer,"{0} passes '{1}' as the 'StringComparer' parameter to {2}. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead."
CA1400,Default,Correct the declaration of {0} so that it correctly points to an existing entry point in {1}. The unmanaged entry point name currently linked to is {2}.
CA1401,Default,Change the accessibility of P/Invoke {0} so that it is no longer visible from outside its assembly.
CA1402,Default,ComVisible(true) interface {0} defines overloaded methods. Give each method a unique name or make the type ComVisible(false).
CA1403,Default,Type {0} is both ComVisible(true) and set to Auto layout. Make this type ComVisible(false) or specify Explicit or Sequential layout.
CA1404,Default,Method {0} called GetLastWin32Error but the immediately preceding call to {1} is not a P/Invoke statement. Move the call to GetLastWin32Error so that it immediately follows the relevant platform invoke call.
CA1405,Default,{0} is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: {1}
CA1406,Default,Member {0} has one or more parameters of type Int64 that cannot be used from Visual Basic 6 clients.
CA1407,Default,Consider whether the absence of {0} adversely impacts functionality for COM clients.
CA1408,Default,"Type {0} uses ClassInterfaceAttribute(ClassInterfaceType.AutoDual) which might not version properly. Instead, define and implement the interface and mark the class using ClassInterfaceType.None."
CA1409,Default,Provide a public default constructor for {0} if it should be COM-creatable or mark the type as ComVisible(false).
CA1410,UnmatchedRegistration,"{0} is marked with the ComRegisterFunction attribute, but a corresponding unregistration function cannot be located in the type."
CA1410,UnmatchedUnregistration,"{0} is marked with the ComUnregisterFunction attribute, but a corresponding registration function cannot be located in the type."
CA1411,Default,"Change the accessibility of {0}, a COM registration function, to private."
CA1412,Default,Mark interface {0} as InterfaceType(ComInterfaceType.InterfaceIsIDispatch) because it is specified in the ComSourceInterfaces attribute applied to types defined in {1}.
CA1413,Default,Type {0} has non-public field {1} that is exposed to COM clients.
CA1414,Default,"Add the MarshalAsAttribute to parameter {0} of P/Invoke {1}. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1)."
CA1414,Return,"Add the MarshalAsAttribute to the return type of P/Invoke {0}. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1)."
CA1415,NativeOverlapped,Change the declaration of {0} so that parameter {1} is a pointer to System.Threading.NativeOverlapped.
CA1500,Local,"{0}, a variable declared in {1}, has the same name as an instance field on the type. Change the name of one of these items."
CA1500,Parameter,"{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items."
CA1501,Default,"{0} has an object hierarchy {1} levels deep within the defining module. If possible, eliminate base classes within the hierarchy: {2}"
CA1502,Default,{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.
CA1504,Static,"The field name {0} suggests that it is instance data but it is declared as static (Shared in Visual Basic). Review this member to verify that it should be static, or consider changing the field name."
CA1504,Instance,"The field name {0} suggests that it is static (Shared in Visual Basic) data but it is declared as an instance member. Review this member to verify that it should be instance, or consider changing the field name."
CA1505,Method,"{0} has a maintainability index of {1}. Rewrite or refactor the method to increase its maintainability index (MI). An MI below {2} indicates poor maintainability, an MI between {2} and {3} indicates moderate maintainability, and an MI above {3} indicates good maintainability."
CA1505,Type,"{0} has a maintainability index of {1}. Rewrite or refactor the type's methods to increase its maintainability index (MI). An MI below {2} indicates poor maintainability, an MI between {2} and {3} indicates moderate maintainability, and an MI above {3} indicates good maintainability."
CA1506,Method,"{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability."
CA1506,Type,"{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability."
CA1506,UIMethod,"{0} is coupled with {1} different (non-IComponent) types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability."
CA1506,UIType,"{0} is coupled with {1} different (non-IComponent) types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability."
CA1600,Default,Modify method {0} to set Process.PriorityClass to something other than ProcessPriorityClass.Idle.
CA1601,Default,Modify the call to {0} in method {1} to set the timer interval to a value that's greater than or equal to one second.
CA900,Default,'{0}' must be reviewed in order to be marked with AllowPartiallyTrustedCallers. Please send an e-mail to 'aptca' in order to set up a meeting for review. See http://team/sites/APTCA for more information.
CA901,Default,{0} must be reviewed in order to be marked APTCA. Please send an e-mail to 'aptca' in order to set up a meeting for review.
CA901,LowPriority,"{0} must be reviewed in order to be marked APTCA. Please send an e-mail to 'aptca' in order to set up a meeting for review. This violation is a lower priority as the type is an enum, delegate, or interface."
CA903,Default,"As {0} is defined in an internal namespace, change its accessibility to internal or move it to either the Microsoft or System namespaces."
CA904,Default,Redefine the types in namespace '{0}' in the Microsoft or System namespace. Public types that will never ship externally can be defined in the MS namespace. Consider disabling this rule when analyzing code that does not ship externally.
CA904,WinRT,Redefine the windows runtime types in namespace '{0}' in the Windows namespace. Consider disabling this rule when analyzing code that does not ship externally.
CA905,Default,All namespaces under the 'System' namespace need to be approved by the .NET Framework team. Namespace '{0}' has not been approved. See http://fxreviews for info on getting this namespace approved. See http://fxcop/docs/rules.aspx?url=/MSInternal/SystemNamespacesRequireApproval.html for information on how to stop this rule from firing after the namespace has been approved.
CA908,Signature,Replace the generic type {0} exposed by {1} with a type that does not require JIT compilation at runtime for precompiled assemblies. If this is not an precompiled assembly this message should be suppressed or this rule should be disabled.
CA908,Implementation,Replace the generic type {0} in the implementation of method {1} with a type that does not require JIT compilation at runtime for precompiled assemblies. If this is not an precompiled assembly this message should be suppressed or this rule should be disabled.
CA908,Method,Replace the generic method {0} called in {1} with a generic method that does not require JIT compilation at runtime for precompiled assemblies. If this is not an precompiled assembly this message should be suppressed or this rule should be disabled.
CA911,Default,Windows runtime type name '{0}' consists of a single term and is not contained in the list of approved single-word type names. Contact KCwalina to get this name approved or changed.
CA2153,Default,Modify {0} to catch and handle a more specific set of exception type(s) than {1} or rethrow the exception. Code that receives and intends to handle corrupted state exceptions should author distinct handlers for each exception type.
CA1700,Default,"If {0} is not used in the current implementation, remove it. Otherwise give it a meaningful name."
CA1701,StringResourceShouldBeDiscreteTerm,"In resource {0}, referenced by name '{1}', the compound word '{2}' in string value '{3}' exists as a discrete term. If your usage is intended to be single word, case it as '{4}'."
CA1701,StringResourceShouldBeCompoundWord,"In resource {0}, referenced by name '{1}' the discrete term '{2}' in string value '{3}' should be expressed as a compound word. If '{2}' refers to an API identifier, case it as '{4}', otherwise split it into two words separated by a space."
CA1701,XmlResourceShouldBeDiscreteTerm,"In resource {0}, in XML element '{1}', the compound word '{2}' in '{3}' exists as a discrete term. If your usage is intended to be single word, case it as '{4}'."
CA1701,XmlResourceShouldBeCompoundWord,"In resource {0}, in XML element '{1}', the discrete term '{2}' in '{3}' should be expressed as a compound word. If '{2}' refers to an API identifier, case it as '{4}', otherwise split it into two words separated by a space."
CA1701,ComponentResourceShouldBeDiscreteTerm,"In component {0}, on '{1}', the compound word '{2}' in '{3}' exists as a discrete term. If your usage is intended to be single word, case it as '{4}'."
CA1701,ComponentResourceShouldBeCompoundWord,"In component {0}, on '{1}', the discrete term '{2}' in '{3}' should be expressed as a compound word. If '{2}' refers to an API identifier, case it as '{4}', otherwise split it into two words separated by a space."
CA1702,AssemblyShouldBeDiscreteTerm,"The compound word '{0}' in assembly name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'."
CA1702,NamespaceShouldBeDiscreteTerm,"The compound word '{0}' in namespace name '{1}' exists as a discrete term. If your usage is intended to be single word, case it as '{2}'."
CA1702,MemberParameterShouldBeDiscreteTerm,"In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation."
CA1702,DelegateParameterShouldBeDiscreteTerm,"In delegate {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation."
CA1702,MethodTypeParameterShouldBeDiscreteTerm,"On method {0}, the compound word '{1}' in generic type parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}'."
CA1702,TypeTypeParameterShouldBeDiscreteTerm,"On type {0}, the compound word '{1}' in generic type parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}'."
CA1702,TypeShouldBeDiscreteTerm,"The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'."
CA1702,MemberShouldBeDiscreteTerm,"The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation."
CA1702,AssemblyShouldBeCompoundWord,"The discrete term '{0}' in assembly name {1} should be expressed as a compound word, '{2}'."
CA1702,NamespaceShouldBeCompoundWord,"The discrete term '{0}' in namespace name '{1}' should be expressed as a compound word, '{2}'."
CA1702,MemberParameterShouldBeCompoundWord,"In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'."
CA1702,DelegateParameterShouldBeCompoundWord,"In delegate {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'."
CA1702,MethodTypeParameterShouldBeCompoundWord,"On method {0}, the discrete term '{1}' in generic type parameter name {2} should be expressed as a compound word, '{3}'."
CA1702,TypeTypeParameterShouldBeCompoundWord,"On type {0}, the discrete term '{1}' in generic type parameter name {2} should be expressed as a compound word, '{3}'."
CA1702,TypeShouldBeCompoundWord,"The discrete term '{0}' in type name {1} should be expressed as a compound word, '{2}'."
CA1702,MemberShouldBeCompoundWord,"The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'."
CA1703,StringResource,"In resource {0}, referenced by name '{1}', correct the spelling of '{2}' in string value '{3}'."
CA1703,XmlResource,"In resource {0}, in XML element '{1}', correct the spelling of '{2}' in '{3}'."
CA1703,ComponentResource,"In component {0}, on '{1}', correct the spelling of '{2}' in '{3}'."
CA1704,Assembly,Correct the spelling of '{0}' in assembly name {1}.
CA1704,Namespace,Correct the spelling of '{0}' in namespace name '{1}'.
CA1704,Type,Correct the spelling of '{0}' in type name {1}.
CA1704,Member,Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.
CA1704,MemberParameter,"In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation."
CA1704,DelegateParameter,"In delegate {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation."
CA1704,TypeTypeParameter,"On type {0}, correct the spelling of '{1}' in generic type parameter name {2}."
CA1704,MethodTypeParameter,"On method {0}, correct the spelling of '{1}' in generic type parameter name {2}."
CA1704,AssemblyMoreMeaningfulName,Consider providing a more meaningful name than assembly name {0}.
CA1704,NamespaceMoreMeaningfulName,Consider providing a more meaningful name than namespace name '{0}'.
CA1704,TypeMoreMeaningfulName,Consider providing a more meaningful name than type name {0}.
CA1704,MemberMoreMeaningfulName,Consider providing a more meaningful name than member name {0}.
CA1704,MemberParameterMoreMeaningfulName,"In method {0}, consider providing a more meaningful name than parameter name {1}."
CA1704,DelegateParameterMoreMeaningfulName,"In delegate {0}, consider providing a more meaningful name than parameter name {1}."
CA1704,TypeTypeParameterMoreMeaningfulName,"On type {0}, consider providing a more meaningful name than generic type parameter name {1}."
CA1704,MethodTypeParameterMoreMeaningfulName,"On method {0}, consider providing a more meaningful name than generic type parameter name {1}."
CA1707,Assembly,Remove the underscores from assembly name {0}.
CA1707,Namespace,Remove the underscores from namespace name '{0}'.
CA1707,Type,Remove the underscores from type name {0}.
CA1707,Member,Remove the underscores from member name {0}.
CA1707,TypeTypeParameter,"On type {0}, remove the underscores from generic type parameter name {1}."
CA1707,MethodTypeParameter,"On method {0}, remove the underscores from generic type parameter name {1}."
CA1707,MemberParameter,"In member {0}, remove the underscores from parameter name {1}."
CA1707,DelegateParameter,"In delegate {0}, remove the underscores from parameter name {1}."
CA1708,Member,Change member names {0} and '{1}' so that they differ by more than case.
CA1708,Type,Change type names {0} and '{1}' so that they differ by more than case.
CA1708,Namespace,Change namespace names {0} and '{1}' so that they differ by more than case.
CA1708,Parameter,Change parameter names {0} and '{1}' so that they differ by more than case.
CA1709,Assembly,Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.
CA1709,Namespace,Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.
CA1709,Type,Correct the casing of '{0}' in type name {1} by changing it to '{2}'.
CA1709,Member,Correct the casing of '{0}' in member name {1} by changing it to '{2}'.
CA1709,MemberParameter,"In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'."
CA1709,DelegateParameter,"In delegate {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'."
CA1709,TypeTypeParameter,"On type {0}, correct the casing of '{1}' in generic type parameter name {2} by changing it to '{3}'."
CA1709,MethodTypeParameter,"On method {0}, correct the casing of '{1}' in generic type parameter name {2} by changing it to '{3}'."
CA1709,AssemblyAbbreviation,Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.
CA1709,NamespaceAbbreviation,Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.
CA1709,TypeAbbreviation,Correct the casing of '{0}' in type name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.
CA1709,MemberAbbreviation,Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.
CA1709,MemberParameterAbbreviation,"In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines."
CA1709,DelegateParameterAbbreviation,"In delegate {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines."
CA1709,TypeTypeParameterAbbreviation,"On type {0}, correct the casing of '{1}' in generic type parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines."
CA1709,MethodTypeParameterAbbreviation,"On method {0}, correct the casing of '{1}' in generic type parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines."
CA1710,Default,Rename {0} to end in '{1}'.
CA1710,SpecialCollection,Rename {0} to end in either 'Collection' or '{1}'.
CA1711,TypeNoAlternate,Rename type name {0} so that it does not end in '{1}'.
CA1711,MemberNewerVersion,Either replace the suffix '{0}' in member name {1} with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the member it replaces.
CA1711,TypeNewerVersion,Either replace the suffix '{0}' in type name {1} with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the type it replaces.
CA1711,MemberWithAlternate,Either replace the suffix '{0}' in member name '{1}' with the suggested alternate '{2}' or remove the suffix completely.
CA1712,Default,Remove {1} from {0}.
CA1713,Before,Replace {0} with a present tense version of the event name.
CA1713,After,Replace {0} with a past tense version of the event name.
CA1714,Default,"If enumeration name {0} is singular, change it to a plural form."
CA1715,Interface,Prefix interface name {0} with 'I'.
CA1715,TypeTypeParameter,"On type {0}, prefix generic type parameter name {1} with 'T'."
CA1715,MethodTypeParameter,"On method {0}, prefix generic type parameter name {1} with 'T'."
CA1716,MemberParameter,"In virtual/interface member {0}, rename parameter {1} so that it no longer conflicts with the reserved language keyword '{2}'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member."
CA1716,Member,Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.
CA1716,Type,Rename type {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.
CA1716,Namespace,Rename namespace {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a namespace makes it harder for consumers in other languages to use the namespace.
CA1717,Default,"If the name {0} is plural, change it to its singular form."
CA1719,Default,Change either member or parameter name {0} so that one differs from the other.
CA1720,LanguageIndependentMemberParameter,"In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'."
CA1720,LanguageIndependentDelegateParameter,"In delegate {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'."
CA1720,LanguageSpecificMemberParameter,"In member {0}, consider replacing the language-specific data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'."
CA1720,LanguageSpecificDelegateParameter,"In delegate {0}, consider replacing the language-specific data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'."
CA1720,LanguageSpecificMember,"Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'."
CA1721,SameType,The property name {0} is confusing given the existence of method {1}. Rename or remove one of these members.
CA1721,BaseType,The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.
CA1722,Default,Remove the leading 'C' from type name {0}.
CA1724,Default,The type name {0} conflicts in whole or in part with the namespace name '{1}'. Change either name to eliminate the conflict.
CA1724,System,The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict.
CA1725,Default,"In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}."
CA1726,Assembly,Replace the term '{0}' in assembly name {1} with the preferred alternate '{2}'.
CA1726,Namespace,Replace the term '{0}' in namespace name '{1}' with the preferred alternate '{2}'.
CA1726,MemberParameter,"In member {0}, replace the term '{1}' in parameter name {2} with the preferred alternate '{3}'."
CA1726,DelegateParameter,"In delegate {0}, replace the term '{1}' in parameter name {2} with the preferred alternate '{3}'."
CA1726,TypeTypeParameter,"On type {0}, replace the term '{1}' in generic type parameter name {2} with the preferred alternate '{3}'."
CA1726,MethodTypeParameter,"On method {0}, replace the term '{1}' in generic type parameter name {2} with the preferred alternate '{3}'."
CA1726,Type,Replace the term '{0}' in type name {1} with the preferred alternate '{2}'.
CA1726,Member,Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.
CA1726,AssemblyNoAlternate,Replace the term '{0}' in assembly name {1} with an appropriate alternate or remove it entirely.
CA1726,NamespaceNoAlternate,Replace the term '{0}' in namespace name '{1}' with an appropriate alternate or remove it entirely.
CA1726,MemberParameterNoAlternate,"In member {0}, replace the term '{1}' in parameter name {2} with an appropriate alternate or remove it entirely."
CA1726,DelegateParameterNoAlternate,"In delegate {0}, replace the term '{1}' in parameter name {2} with an appropriate alternate or remove it entirely."
CA1726,TypeTypeParameterNoAlternate,"On type {0}, replace the term '{1}' in generic type parameter name {2} with an appropriate alternate or remove it entirely."
CA1726,MethodTypeParameterNoAlternate,"On method {0}, replace the term '{1}' in generic type parameter name {2} with an appropriate alternate or remove it entirely."
CA1726,TypeNoAlternate,Replace the term '{0}' in type name {1} with an appropriate alternate or remove it entirely.
CA1726,MemberNoAlternate,Replace the term '{0}' in member name {1} with an appropriate alternate or remove it entirely.
CA1800,Local,"{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction."
CA1800,Parameter,"{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction."
CA1802,Default,Field {0} is declared as 'static readonly' but is initialized with a constant value '{1}'. Mark this field as 'const' instead.
CA1802,EmptyString,"Field {0} is declared as 'static readonly' but is initialized with an empty string (""""). Mark this field as 'const' instead."
CA1804,Default,"{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it."
CA1809,Default,"{0} has {1} local variables, some of which may have been generated by the compiler. Refactor {0} so that it uses fewer than 64 local variables."
CA1809,Compiler,"{0} has {1} local variables, {2} of which were generated by the compiler. Refactor {0} so that it uses fewer than 64 local variables."
CA1810,Default,Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.
CA1811,Default,{0} appears to have no upstream public or protected callers.
CA1812,Default,"{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor."
CA1813,Default,"Seal {0}, if possible."
CA1814,Default,{0} is a multidimensional array. Replace it with a jagged array if possible.
CA1814,Return,{0} returns a multidimensional array of {1}. Replace it with a jagged array if possible.
CA1814,Body,{0} uses a multidimensional array of {1}. Replace it with a jagged array if possible.
CA1815,Equals,{0} should override Equals.
CA1815,op_Equality,{0} should override the equality (==) and inequality (!=) operators.
CA1819,Default,Change {0} to return a collection or make it a method.
CA1820,Default,Replace the call to {0} in {1} with a check for non-null and 'String.Length == 0'.
CA1820,IsNullOrEmpty,Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.
CA1821,Default,"{0} implements a finalizer that only calls conditionally emitted methods or the base type finalizer. Remove the finalizer or ensure that it is only conditionally compiled into the assembly. If this violation occurs against a finalizer that is entirely wrapped in a conditionally-emitted block of code, suppress this message."
CA1822,Default,"The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
CA1823,Default,It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.
CA1824,Default,"Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved."
CA1900,Default,Structure {0} contains the following non-portable fields: {1}.
CA1901,Parameter,"As it is declared in your code, parameter {0} of P/Invoke {1} will be {2} bytes wide on {3} platforms. This is not correct, as the actual native declaration of this API indicates it should be {4} bytes wide on {3} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {5}."
CA1901,Return,"As it is declared in your code, the return type of P/Invoke {0} will be {1} bytes wide on {2} platforms. This is not correct, as the actual native declaration of this API indicates it should be {3} bytes wide on {2} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {4}."
CA1903,TypeReferencesType,"Type {0} uses type {1}. Because this type was introduced in {2}, which was not included in the project's target framework, {3}, your application may fail to run on systems without this service pack installed."
CA1903,TypeReferencesMember,"Type {0} uses member {1}. Because this member was introduced in {2}, which was not included in the project's target framework, {3}, your application may fail to run on systems without this service pack installed."
CA1903,MemberReferencesType,"Member {0} uses type {1}. Because this type was introduced in {2}, which was not included in the project's target framework, {3}, your application may fail to run on systems without this service pack installed."
CA1903,MemberReferencesMember,"Member {0} uses member {1}. Because this member was introduced in {2}, which was not included in the project's target framework, {3}, your application may fail to run on systems without this service pack installed."
CA1903,AssemblyReferencesMember,"Assembly {0} is marked with an attribute that uses member {1}. Because this member was introduced in {2}, which was not included in the project's target framework, {3}, your application may fail to run on systems without this service pack installed."
CA1903,AssemblyReferencesType,"Assembly {0} is marked with an attribute that uses type {1}. Because this type was introduced in {2}, which was not included in the project's target framework, {3}, your application may fail to run on systems without this service pack installed."
CA1903,AssemblyReferencesAssembly,"Assembly {0} has a reference to assembly '{1}'. Because this assembly was introduced in {2}, which is higher than the project's target framework, {3}, your application may fail to run on systems without this framework installed."
CA2001,System.GC.Collect,"Remove the call to GC.Collect from {0}. It is usually unnecessary to force garbage collection, and doing so can severely degrade performance."
CA2001,System.Threading.Thread.Resume,Remove the call to Thread.Resume from {0}. Suspending and resuming threads can be dangerous if the system is in the middle of a critical operation such as executing a class constructor of an important system type or resolving security for a shared assembly.
CA2001,System.Threading.Thread.Suspend,Remove the call to Thread.Suspend from {0}. Suspending and resuming threads can be dangerous if the system is in the middle of a critical operation such as executing a class constructor of an important system type or resolving security for a shared assembly.
CA2001,System.Type.InvokeMember,Remove the call to System.Type.InvokeMember with BindingFlags.NonPublic from {0}. Taking a dependency on a private member increases the chance of a breaking change in the future.
CA2001,CoInitializeSecurity,"{0} is a P/Invoke declaration to an OLE32 API that cannot be reliably called after the runtime has been initialized. The workaround is to write an unmanaged shim that will call the routine and then activate and call into managed code. You can do this using an export from a mixed-mode C++ DLL, by registering a managed component for use by COM, or by using the runtime hosting API."
CA2001,CoSetProxyBlanket,{0} is a P/Invoke declaration to an OLE32 API that cannot be reliably called against a runtime callable wrapper (a managed object wrapping a COM object). Runtime callable wrappers dynamically fetch interface pointers so the effect of the call might be arbitrarily lost. Runtime callable wrappers for a given COM object are also shared across an application domain so the call could possibly affect other users. Replace this call with a native wrapper COM object for the interface pointer that does the appropriate CoSetProxyBlanket calls.
CA2001,System.Runtime.InteropServices.SafeHandle.DangerousGetHandle,Remove the call to SafeHandle.DangerousGetHandle from {0}.
CA2001,System.Reflection.Assembly.LoadFrom,Remove the call to Assembly.LoadFrom from {0}.
CA2001,System.Reflection.Assembly.LoadFile,Remove the call to Assembly.LoadFile from {0}.
CA2001,System.Reflection.Assembly.LoadWithPartialName,Remove the call to Assembly.LoadWithPartialName from {0}.
CA2002,Default,{0} locks on a reference of type {1}. Replace this with a lock against an object with strong-identity.
CA2003,Default,Method {0} calls the native method {1}. Remove this call because it is inappropriate for managed threads.
CA2004,Default,{0} contains one or more calls to GC.KeepAlive(object) that should be removed (after converting to SafeHandle to encapsulate the unmanaged resource).
CA2006,Default,Review usage of {0} (a {1} instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.
CA5350,Default,"{0} calls into an instance of the {1} type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the MD5 and HMACMD5 algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256)."
CA5351,Default,"{0} calls into an instance of the {1} type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits."
CA5352,Default,"{0} calls into an instance of the {1} type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits."
CA5353,Default,"{0} calls into an instance of the {1} type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits."
CA5354,Default,"{0} calls into an instance of the {1} type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the SHA-1 and SHA-0 algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256)."
CA5355,Default,"{0} calls into an instance of the {1} type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the RIPEMD hash algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256)."
CA5356,Default,"{0} calls into an instance of the {1} type, which implements a cryptographically insecure signature-creation mechanism that is banned by the SDL. Replace this usage with RSA or Diffie-Hellman with a key length greater than or equal to 2048-bits, or ECDSA or ECDH with a key length greater than or equal 256 bits."
CA5357,Default,"{0} calls into an instance of the {1} type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits."
CA2102,Default,"{0} is defined in an assembly that is not marked RuntimeCompatibility(WrapNonExceptionThrows = true) and defines a catch(Exception) handler that is not matched with a generic catch clause (catch{{}} in C#, catch(System::Object*){{}} in mc++) for non-CLSCompliant exceptions. Either mark the assembly as RuntimeCompatibility(WrapNonExceptionThrows = true), eliminate the catch(Exception) clause by catching a specific set of Exceptions or add a generic catch handler that duplicates the code contained within the catch(Exception) handler."
CA2103,ClassMember,"Review the following for a possible security vulnerability: In {0}, the class member {1} is being passed to a {2} constructor."
CA2103,Parameter,Review the following for a possible security vulnerability: Parameter {0} of {1} is being passed to a {2} constructor.
CA2103,MethodCall,"Review the following for a possible security vulnerability: In {0}, the return value of a call to {1} is being passed to a {2} constructor."
CA2104,Default,"Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message."
CA2105,Default,"Either replace {0} with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array."
CA2106,Default,"Consider adding a security demand to {0}. This method is accessible from outside its assembly, and might therefore provide a way to circumvent security protection."
CA2106,Stack,Consider adding a security demand to {0}. The following call stack might expose a way to circumvent security protection: {1}
CA2107,Default,{0} uses a permission Deny or PermitOnly. Use of Deny or PermitOnly should be carefully reviewed.
CA2108,Type,Remove the demand or link demand from {0} because it will not prevent the struct from being instantiated. Place the demand on a parameterized constructor instead and make sure that the initial state of the structure is detectably valid or invalid (the struct will only be initialized with default values if the security demand is not satisfied).
CA2108,Constructor,The demand or link demand on {0} will not prevent the struct from being instantiated but it will only be initialized with default values if the security demand is not satisfied. Make sure that the initial state of the structure is detectably valid or invalid.
CA2109,Security,Consider making {0} not externally visible or ensure that it is benign code.
CA2109,Default,Consider making {0} not externally visible.
CA2111,Default,Make {0} private.
CA2112,Default,"{0} has a LinkDemand or Demand, and exposes the field {1}. Fields cannot be protected by LinkDemands or Demands. To remove this vulnerability, make the field private and expose a property that has security applied to it."
CA2114,Default,Apply {0} security checks that currently exist at the type level only to method {1} as well.
CA2115,Default,Add a call to GC.KeepAlive(this) at the end of method {0}.
CA2116,Default,"The method {0} is defined in an assembly that has AllowPartiallyTrustedCallersAttribute and calls {1}, which is defined in an assembly ({2}) that does not. Review the called methods to ensure they cannot be used in a destructive manner if called by malicious code."
CA2117,Default,"Do one of the following: 1) Remove the AllowPartiallyTrustedCallersAttribute from {0}. 2) If the attribute is necessary, verify that {0} does not expose any protected members of inherited types. 3) Add AllowPartiallyTrustedCallersAttribute to the base type {1}, if you can ensure that this will not have negative implications on security."
CA2118,PlatformInvokeVisible,"Review declarative security for {0} and its callers for potential vulnerabilities. This method is accessible from outside its assembly, and might therefore provide a way to circumvent security protection. Consider removing SuppressUnmanagedCodeSecurity from the method or make it private and wrap it with a public method that demands a permission appropriate to the P/Invoke functionality and security risk."
CA2118,PlatformInvokeStack,Review declarative security for {0} and its callers for potential vulnerabilities. The following call stack might expose a way to circumvent security protection: {1}
CA2118,Default,Member {0} is marked with SuppressUnmanagedCodeSecurityAttribute. Make sure this does not result in a security vulnerability.
CA2118,Type,Remove SuppressUnmanagedCodeSecurityAttribute from {0} or ensure its use does not result in a security vulnerability.
CA2119,Default,"{0} is an overridable method that satisfies a member on the private interface '{1}'. Mark the method as final, implement it explicitly or seal its declaring type {2}."
CA2120,Default,Security demands were found on {0}. Mark the serialization constructor for this type with the declarative form of the same demand(s).
CA2121,Default,Declare an explicit static constructor for '{0}'.
CA2122,Default,"{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}"
CA2124,Default,Wrap the finally clause in {0} that calls {1} in an outer try block with an associated catch that simply rethrows.
CA2126,Default,{0} has one or more overridable methods with link demands that are not matched by an inheritance demand. Apply appropriate inheritance demands to the type.
CA2126,Extended,{0} has one or more overridable methods with link demands that are not matched by an inheritance demand. Apply the following inheritance demands to the type: {1}
CA3050,Default,"System.Xml.Xsl.XslTransform is obsolete and unsafe, replace instances with System.Xml.Xsl.XslCompiledTransform."
CA3053,XslCompiledTransformTransformWrongOverload,"{0} calls {1}, an overload which does not accept an explicit XmlResolver argument. This usage is potentially unsafe as untrusted external XML resources may be resolved during the transform operation. Replace this usage with a call to an XslCompiledTransform.Transform overload that accepts an XmlResolver argument and provide an instance of XmlSecureResolver or null as the argument. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported."
CA3053,XslCompiledTransformTransformInsecureXmlResolver,{0} calls {1} and passes an instance of XmlResolver as argument. This usage is potentially unsafe as untrusted external XML resources may be resolved during the transform operation. Replace this usage with an instance of XmlSecureResolver or null as the argument. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.
CA3053,XslCompiledTransformLoadWrongOverload,"{0} calls {1}, an overload which does not accept explicit XsltSettings and XmlResolver arguments. This usage is potentially unsafe as untrusted external XML resources may be resolved during the load operation. Replace this usage with a call to an XslCompiledTransform.Load overload that accepts XslSettings and XmlResolver arguments. Specifcy XslSettings.Default as the XslSettings argument or provide an XmlSecureResolver instance or null as the XmlResolver argument. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported."
CA3053,XslCompiledTransformLoadInsecureXmlResolve,{0} calls {1} and provides an insecure XsltSettings instance and an XmlResolver instance as arguments. This usage is potentially unsafe as untrusted external XML resources may be resolved during the load operation. Either replace the use of XsltSettings.Trusted with XsltSettings.Default (as secure instance of the type) or replace the XmlResolver argurment with null or an XmlSecureResolver instance. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.
CA3053,XmlReaderCreateWrongOverload,"{0} instantiates an XmlReader instance by calling {1}, an overload which does not accept an explicit XmlReaderSettings argument. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver."
CA3053,XmlReaderCreateInsecureXmlResolver,{0} instantiates an XmlReader instance by calling {1} and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.
CA3053,XmlDocument,{0} instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.
CA3054,Default,"Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore"
CA3055,Default,"XmlReader by default is safe, but DtdProcessing is set to System.Xml.DtdProcessing.Parse. Review that XML is coming from a trusted source."
CA3056,Default,"Using this overload of System.Xml.XmlDocument/XmlDataDocument Load() method is potentially unsafe, replace with the Load() overload that takes an XmlReader instance"
CA3057,Default,"Using System.Xml.XmlDocument/XmlDataDocument LoadXml() method is potentially unsafe, replace with the Load() overload that takes an XmlReader instance"
CA3058,Default,"Setting the InnerXml property of System.Xml.XmlDocument/XmlDataDocument is potentially unsafe, replace with a call to the Load() method overload that takes an XmlReader instance"
CA3059,Default,"This overload of the constructor for System.Xml.XPath.Xpath.XPathDocument results in an object instance that is potentially unsafe, use a constructor overload that takes a XmlReader instance instead"
CA3060,Default,"This overload of System.Xml.Schema.XmlSchema.Read method is potentially unsafe, use the overload that takes a XmlReader instance instead"
CA3061,Default,"This overload of System.Xml.Schema.XmlSchemaCollection.Add method is potentially unsafe, use any other overload that takes a XmlReader instance or a XmlResolver instance, resolver should either be set to null or an instance of XmlSecureResolver"
CA3062,Default,"Review that the XML to be parsed here is from a trusted source, otherwise use the constructor overload that takes a XmlReader instance instead and pass in a XmlTextReader with a null XmlResolver and ideally DTD processing disabled"
CA3063,Default,"This overload of the System.Data.DataSet.ReadXml method is potentially unsafe, use an overload that takes a XmlReader instance instead"
CA3064,Default,"This overload of the System.Data.DataSet.ReadXmlSchema method is potentially unsafe, use an overload that takes a XmlReader instance instead"
CA3065,Default,"Review that the value passed in to the System.Data.DataViewManager.DataViewSettingCollectionString setter is from a trusted source, otherwise avoid using this class or sanitize the input value to not contain DTD"
CA3066,Default,"Review that the XML is from a trusted source, otherwise avoid using this control"
CA3067,Default,"Review that the XML is from a trusted source, otherwise avoid using this control"
CA3068,Default,"This overload of the constructor for the System.Xml.XmlTextReaderImpl is unsafe when used with untrusted XML, consider replacing this with overloads that take a XmlReaderSettings instance, disable DTD processing, also use a null or secure XmlResolver"
CA3069,Default,Review this assignment to ensure that DTD processing is indeed needed and that inheritance or usage in other .NET classes is all documented and acceptable as not being safe by default
CA3070,Default,"This overload of System.Xml.Serialization.XmlSerializer.Deserialize method is potentially unsafe, use an overload that takes a XmlReader instance instead"
CA3071,Default,"This overload of the System.Data.DataTable.ReadXml method is potentially unsafe, use an overload that takes a XmlReader instance instead"
CA3072,Default,"This overload of the System.Data.DataTable.ReadXmlSchema method is potentially unsafe, use an overload that takes a XmlReader instance instead"
CA3073,Default,"Review that the XML and XSL transform is from a trusted source, otherwise revise the XsltSettings to an instance that has disabled document function and script execution"
CA3074,Default,"{0} is a child of XmlTextReader which is unsafe when used to process untrusted XML, review that the XML parsed by this instance is always from a trusted source, or disable DTD processing on this instance, by setting it’s DtdProcessing to DtdProcessing.Ignore or Prohibit (CLR > 3.5) or set ProhibitDtd to true (CLR <= 3.5)."
CA1801,Default,Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.
CA1806,ObjectCreation,"{0} creates a new instance of {1} which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary."
CA1806,StringCreation,"{0} calls {1} but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary."
CA1806,HResultOrErrorCode,"{0} calls {1} but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method."
CA1806,TryParse,{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.
CA2200,Default,"{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised."
CA2201,TooGeneric,"{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type."
CA2201,Reserved,"{0} creates an exception of type {1}, an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type."
CA2205,PlatformInvokeDeclaration,Remove the declaration for {0}. Callers should use the following managed alternative: {1}
CA2207,Default,Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.
CA2208,NoArguments,Call the {0} constructor that contains a message and/or paramName parameter.
CA2208,IncorrectMessage,Method {0} passes parameter name '{1}' as the {2} argument to a {3} constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.
CA2208,IncorrectParameterName,Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.
CA2211,Default,Consider making {0} non-public or a constant.
CA2212,Default,{0} has the WebMethod attribute applied to it and its declaring type extends ServicedComponent. This is not a supported scenario.
CA2213,Default,{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.
CA2214,Default,{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}
CA2216,Default,Implement a finalizer or destructor on {0}.
CA2217,Default,{0} is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: {1}
CA2218,Default,"Since {0} redefines Equals, it should also redefine GetHashCode."
CA2219,Finally,"Modify member {0} so that it does not raise an exception from within a finally clause. When an exception is raised from within a finally clause, the new exception hides the active exception, if present, making the original error hard to detect and debug."
CA2219,Filter,"Modify member {0} so that it does not raise an exception from within a filter clause. When an exception is raised from within a filter clause, the runtime silently catches the exception, causing the filter to evaluate to false. This makes it hard to detect and debug errors in the filter's logic."
CA2219,Fault,"Modify member {0} so that it does not raise an exception from within a fault clause. When an exception is raised from within a fault clause, the new exception hides the active exception, making the original error hard to detect and debug."
CA2220,Default,Modify {0} so that it calls its base class' finalize method.
CA2221,Default,Mark the finalizer for type {0} as protected.
CA2222,Default,"Make {0} non-private, mark it as final, or seal its declaring type. This method was originally defined in base class {1}."
CA2223,Default,'{0}' should differ from other members by more than its return type.
CA2224,Default,Override Equals on {0}.
CA2225,Default,Provide a method named '{0}' as a friendly alternate for operator {1}.
CA2225,Property,Provide a property named '{0}' as a friendly alternate for operator {1}.
CA2225,Multiple,Provide a method named '{0}' or '{1}' as an alternate for operator {2}.
CA2225,Visibility,Mark {0} as public because it is a friendly alternate for operator {1}.
CA2226,Default,"Since '{0}' redefines operator '{1}', it should also redefine operator '{2}'."
CA2227,Default,Change {0} to be read-only by removing the property setter.
CA2228,Default,Rebuild resource file {0} with a released version of .NET. The '{1}' key specified an unrecognized version '{2}'. The version found in the current mscorlib is '{3}'.
CA2229,CreateMagicConstructor,"Add a constructor to {0} with the following signature: 'protected {0}(SerializationInfo info, StreamingContext context)'."
CA2229,MakeUnsealedMagicConstructorFamily,"Declare the serialization constructor of {0}, an unsealed type, as protected."
CA2229,MakeSealedMagicConstructorPrivate,"Declare the serialization constructor of {0}, a sealed type, as private."
CA2230,Default,"Change {0} to use parameter arrays instead of varargs. For C#, use 'params'. For Visual Basic .NET and C++, use 'ParamArray'."
CA2231,Default,"Because {0} is a value type that overrides ValueType.Equals, it should also overload the equality and inequality operators (== and !=)."
CA2232,Default,Mark the entry point method {0} in assembly {1} with an STAThreadAttribute.
CA2233,Default,Correct the potential overflow in the operation '{0}' in {1}.
CA2234,Default,Modify {0} to call {1} instead of {2}.
CA2235,Default,"Field {0} is a member of type {1}, which is serializable, but is of type {2}, which is not serializable. Add the NonSerializedAttribute to {0}."
CA2236,Default,Method {0} should be modified to call its base class implementation.
CA2237,Default,Add [Serializable] to {0} as this type implements ISerializable.
CA2238,Visibility,"Because {0} is marked with OnSerializing, OnSerialized, OnDeserializing, or OnDeserialized, change its accessibility to private."
CA2238,ReturnType,"Because {0} is marked with OnSerializing, OnSerialized, OnDeserializing, or OnDeserialized, change its return type from {1} to void (Sub in Visual Basic)."
CA2238,Parameters,"Because {0} is marked with OnSerializing, OnSerialized, OnDeserializing, or OnDeserialized, change its signature so that it takes a single parameter of type 'System.Runtime.Serialization.StreamingContext'."
CA2238,Generic,"Because {0} is marked with OnSerializing, OnSerialized, OnDeserializing, or OnDeserialized, change its signature so that it is no longer generic."
CA2238,Static,"Because {0} is marked with OnSerializing, OnSerialized, OnDeserializing, or OnDeserialized, change it from static (Shared in Visual Basic) to an instance method."
CA2239,OnDeserialized,Add a 'private void OnDeserialized(StreamingContext)' method to type {0} and attribute it with the System.Runtime.Serialization.OnDeserializedAttribute.
CA2239,OnDeserializing,Add a 'private void OnDeserializing(StreamingContext)' method to type {0} and attribute it with the System.Runtime.Serialization.OnDeserializingAttribute.
CA2240,Default,Add an implementation of GetObjectData to type {0}.
CA2240,MakeVisible,Increase the accessibility of {0}.GetObjectData so that it is visible to derived types.
CA2240,MakeOverridable,Make {0}.GetObjectData virtual and overridable.
CA2242,Default,"Because direct comparisons to 'Single.NaN' or 'Double.NaN' will always return true for inequality and false for all other comparisons, replace the comparison in {0} with a call to 'Single.IsNaN' or 'Double.IsNaN'."
CA2243,Default,"In the constructor of {0}, change the value of argument {1}, which is currently ""{2}"", to something that can be correctly parsed as {3}."
CA2243,Empty,"In the constructor of {0}, change the value of argument {1}, which is currently an empty string (""""), to something that can be correctly parsed as {2}."
CA1816,NotCalledWithFinalizer,Change {0} to call {1}. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.
CA1816,NotCalled,Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.
CA1816,NotPassedThis,{0} calls {1} on something other than itself. Change the call site to pass 'this' ('Me' in Visual Basic) instead.
CA1816,OutsideDispose,"{0} calls {1}, a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information."
